{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@project-sunbird/sunbird-quml-player-v9/lib/util-service.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/quml-library.service.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/quml-library.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/mcq/mcq.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/sa/sa.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/header/header.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/mcq-question/mcq-question.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/mcq-option/mcq-option.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/quml-popup/quml-popup.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/mcq-image-option/mcq-image-option.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/zoom-in/zoom-in.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/star/star.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/previous/previous.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/next/next.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/bookmark/bookmark.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/hint/hint.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/ans/ans.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/share/share.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/correct/correct.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/scoreboard/scoreboard.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/startpage/startpage.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/timer/timer.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/content/content.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/startpagestaricon/startpagestaricon.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/previous-active/previous-active.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/next-active/next-active.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/alert/alert.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/close/close.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/mcq-solutions/mcq-solutions.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/durationtimer/durationtimer.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/audio/audio.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/wrong/wrong.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/icon/menu/menu.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/pipes/safe-html/safe-html.pipe.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/telemetry-constants.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/quml-question-cursor.service.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/services/viewer-service/viewer-service.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/main-player/main-player.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/section-player/section-player.component.ts","ng://@project-sunbird/sunbird-quml-player-v9/lib/quml-library.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","UtilService","uniqueId","characters","charactersLength","charAt","Math","floor","random","getTimeSpentText","pdfPlayerStartTime","duration","Date","getTime","minutes","seconds","Number","toFixed","getKeyValue","keys","find","k","includes","getMultiselectScore","options","responseDeclaration","key","selectedOptionValue","map","option","score","correctResponse","outcomes","maxScore","correctValues","mapping","_.isEqual","reduce","sum","index","hasDuplicates","selectedOptions","o","getQuestionType","questions","currentIndex","canGo","progressBarClass","sumObjectsByKey","objects","_i","accumulator","currentValue","Injectable","args","providedIn","QumlLibraryService","utilService","isSectionsAvailable","telemetryEvent","EventEmitter","initializeTelemetry","config","parentConfig","context","contentSessionId","playSessionId","channel","pdata","sid","uid","rollup","contextRollup","_a","CsTelemetryModule","instance","isInitialised","telemetryConfig","env","did","authtoken","authToken","batchsize","mode","host","endpoint","tags","cdata","concat","id","type","init","telemetryService","initTelemetry","userOrgDetails","telemetryObject","identifier","ver","metadata","pkgVersion","toString","objectRollup","startAssesEvent","assesEvent","raiseAssesTelemetry","getEventOptions","start","raiseStartTelemetry","edata","pageid","response","version","responseEvent","target","values","raiseResponseTelemetry","summary","eData","raiseSummaryTelemetry","end","currentQuestionIndex","totalNoofQuestions","visitedQuestions","endpageseen","durationSec","raiseEndTelemetry","progress","interact","currentPage","currentQuestionDetails","raiseInteractTelemetry","subtype","heartBeat","data","playerTelemetryService","onHeartBeatEvent","impression","raiseImpressionTelemetry","uri","error","raiseErrorTelemetry","err","errtype","stacktrace","object","QumlLibraryComponent","ngOnInit","Component","selector","template","McqComponent","domSanitizer","componentLoaded","answerChanged","optionSelected","mcqOptions","showQumlPopup","question","solutions","cardinality","templateId","layout","renderLatex","mcqQuestion","sanitize","SecurityContext","HTML","bypassSecurityTrustHtml","interactions","initOptions","ngAfterViewInit","el","document","getElementsByClassName","remove","j","imageUrl","url","optionValue","optionHtml","optionToBePushed","selected","_instance","setTimeout","replaceLatexText","images","getElementsByTagName","questionElement","getElementById","mathTextDivs","mathExp","textToRender","innerHTML","katex","render","displayMode","output","throwOnError","onOptionSelect","event","mcqOption","forEach","mcqOptionElement","getSelectedOptionAndResult","optionSelectedInImage","optionObj","emit","showPopup","closePopUp","DomSanitizer","Input","Output","SaComponent","showAnswerClicked","showAnswer","ngOnChanges","replayed","isAnswerShown","showAnswerToUser","onEnter","keyCode","stopPropagation","handleKeyboardAccessibility","Array","from","element","offsetHeight","querySelectorAll","child","setAttribute","_this","answer","ele","media","baseUrl","src","thumbnail","HeaderComponent","nextSlideClicked","prevSlideClicked","durationEnds","showSolution","showWarning","isMobilePortrait","showTimer","initializeTimer","intervalRef","timer","showCountUp","clearInterval","window","matchMedia","matches","ngOnDestroy","nextSlide","disableNext","prevSlide","showStartPage","currentSlideIndex","disablePreviousNavigation","openNav","style","width","backgroundColor","closeNav","durationInSec_1","setInterval","min","sec","time","parseInt","warningTime","McqQuestionComponent","McqOptionComponent","selectedOption","tryAgain","unselectOption","name","onImageOptionSelected","QumlPopupComponent","image","popUpClose","closePopup","McqImageOptionComponent","imgOptionSelected","qumlPopupImage","optionClicked","openPopup","ZoomInComponent","StarComponent","PreviousComponent","NextComponent","BookmarkComponent","HintComponent","AnsComponent","ShareComponent","CorrectComponent","ScoreboardComponent","submitClicked","emitQuestionNo","scoreBoardLoaded","subscription","fromEvent","subscribe","click","goToQuestion","questionNo","unsubscribe","StartpageComponent","TimerComponent","ContentComponent","StartpagestariconComponent","PreviousActiveComponent","NextActiveComponent","AlertComponent","closeAlert","showHint","isFocusSet","onKeydownHandler","close","previousActiveElement","console","log","nextBtn","querySelector","focus","wrongButton","correctButton","alertType","showSolutionButton","viewHint","hint","viewSolution","solution","HostListener","CloseComponent","McqSolutionsComponent","closeSolution","solutionVideoPlayer","nativeElement","pause","ViewChild","static","DurationtimerComponent","AudioComponent","WrongComponent","MenuComponent","SafeHtmlPipe","sanitized","transform","Pipe","pageId","eventName","TelemetryType","ViewerService","qumlLibraryService","questionCursor","qumlPlayerEvent","qumlQuestionEvent","timeSpent","isAvailableLocally","sectionQuestions","initialize","threshold","questionIds","identifiers","_.cloneDeep","parentIdentifier","rotation","totalNumberOfQuestions","childNodes","qumlPlayerStartTime","qumlPlayerLastPageTime","contentName","artifactUrl","questionSetId","userData","userName","firstName","lastName","metaData","pagesHistory","totalPages","progressBar","lastQuestionId","loadingProgress","endPageSeen","raiseStartEvent","startEvent","eid","raiseEndEvent","endEvent","filter","a","indexOf","raiseHeartBeatEvent","telemetryType","hearBeatEvent","questionIndex","sectionId","toLowerCase","raiseAssesEvent","questionData","pass","resValues","assessEvent","item","resvalues","raiseResponseEvent","qType","raiseSummaryEvent","summaryObj","timespent","starttime","endtime","pageviews","correct","wrong","partial","extra","skipped","summaryEvent","raiseExceptionLog","errorCode","errorType","traceId","exceptionLogEvent","requestid","getQuestions","indentifersForQuestions","undefined","splice","_.isEmpty","requests_1","chunkArray","_.chunk","_.forEach","forkJoin","getQuestion","indentiferForQuestion","generateMaxAttemptEvents","currentattempt","maxLimitExceeded","isLastAttempt","updateSectionQuestions","findIndex","section","getSectionQuestions","QuestionCursor","MainPlayerComponent","viewerService","playerEvent","submitEvent","isLoading","isMultiLevelSection","sections","isFirstSection","sectionIndex","loadScoreBoard","requiresSubmit","isReplayed","instructions","questionCount","showEndPage","endPageReached","isEndEventRaised","isSummaryEventRaised","showReplay","mainProgressBar","isDurationExpired","finalScore","totalNoOfQuestions","sideMenuConfig","enable","showShare","showDownload","showExit","totalVisitedQuestion","showInstructions","onTelemetryEvent","detail","playerConfig","JSON","parse","setConfig","initializeSections","childMimeType","_.map","children","getMultilevelSection","contentError","messageHeader","messageTitle","_b","maxQuestions","_c","_d","shuffle","_f","_e","_.shuffle","slice","timeLimits","setInitialScores","activeSection","class","_g","_j","_h","questionsObj","_k","default","showFeedBack","showFeedback","sideMenu","basePath","attempts","max","_l","maxAttempt","current","_m","currentAttempt","totalScore","_o","_p","_q","initialTime","emitMaxAttemptEvents","obj","isMultiLevel","hasChildren","arr","some","getActiveSectionIndex","onShowScoreBoard","activeSectionIndex","updateSectionScore","onSectionEnd","setNextSection","prepareEnd","onPlayerEvent","getSummaryObject","_.flattenDeep","classObj","_.groupBy","_.get","isSectionFullyAttempted","isSectionPartiallyAttempted","isDurationEnded","nextSectionIndex","jumpToSection","isActive","calculateScore","setDurationSpent","replayContent","jumpToQuestion","alphabets","split","toLocaleUpperCase","_.last","generateOutComeLabel","exitContent","summaryType","durationSpent","onScoreBoardLoaded","onScoreBoardSubmitted","outcomeLabel","sectionIndex_1","SectionPlayerComponent","cdRef","errorService","sectionEnd","showScoreBoard","destroy$","Subject","loadView","showContentError","noOfTimesApiCalled","tryAgainClicked","carouselConfig","NEXT","PREV","active","showQuestions","showZoomModal","imageZoomCount","showRootInstruction","slideDuration","changes","subscribeToEvents","asObservable","pipe","takeUntil","res","sectionConfig","navigator","onLine","contentLoadFails","errorMessage","Error","internetConnectivity","unCommonQuestions","_.xorBy","_.uniqBy","sortQuestions","detectChanges","myCarousel","selectSlide","currentQuestionsMedia","setImageZoom","highlightQuestion","removeAttribute","menuBtn","questionIdsCopy","noOfQuestions","checkCompatibilityLevel","compatibilityLevel","initialSlideDuration","timeLimit","maxTime","showUserSolution","showSolutions","startPageInstruction","linearNavigation","navigationMode","showHints","_s","_r","points","_t","allowSkip","_v","_u","_x","_w","_y","_z","resetQuestionState","_1","_0","firstSlide","ques_1","questionId","que","createSummaryObj","getCurrentSlideIndex","isLast","currentOptionSelected","setSkippedClass","move","clearTimeInterval","emitSectionEnd","currentSolutions","showAlert","optionSelectedObj","currentQuestion","currentOptions","activeSlideChange","validateSelectedOption","previousSlideClicked","stopAutoNavigation","getCurrentSectionIndex","previousSectionId","currentSectionId","goToSlideClicked","jumpSlideIndex","goToSlide","onSectionEnter","onScoreBoardClicked","onScoreBoardEnter","focusOnNextButton","getOptionSelected","updateScoreBoard","checkContentCompatible","checkContentCompatibility","isCompitable","contentCompatibility","eventObj","slideIndex","closeAlertBox","sideBarEvents","handleSideBarAccessibility","navBlock","overlayInput","overlayButton","sideBarList","isMobile","disabledHandle","maintain","hidden","tabFocus","checked","visibility","marginLeft","disengage","isQuestionSkipAllowed","isSubjectiveQuestion","onStartPage","selectedQuestion","correctOptionValue","round","edataItem","title","desc","description","maxscore","params","toUpperCase","editorState","getParams","currentScore","getScore","correctFeedBackTimeOut","classType","infoPopupTimeOut","infoPopup","questionType","questionTitleElement_1","getSolutions","response1","setImageHeightWidthClass","clearTimeout","isCorrectAnswer","SCORE","selectedOptionValue_1","score_1","val","classToBeUpdated","clientHeight","clientWidth","currentQuestionId","imageId","getAttribute","divElement","createElement","onclick","zoomImgSrc","zoomImage","parentNode","insertBefore","nextSibling","zoomIn","setImageModalHeightWidth","zoomOut","imageModal","height","closeZoom","getInternetConnectivityError","ChangeDetectorRef","ErrorService","QumlLibraryModule","NgModule","declarations","imports","CommonModule","CarouselModule","SunbirdPlayerSdkModule","TranslateModule","forRoot","defaultLanguage","loader","provide","TranslateLoader","useFactory","HttpLoaderFactory","deps","HttpClient","providers","exports","http","TranslateHttpLoader"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash-es';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UtilService {\n\n    constructor() { }\n\n    public uniqueId(length = 32) {\n        let result = '';\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        const charactersLength = characters.length;\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    public getTimeSpentText(pdfPlayerStartTime) {\n        const duration = new Date().getTime() - pdfPlayerStartTime;\n        const minutes = Math.floor(duration / 60000);\n        const seconds = Number(((duration % 60000) / 1000).toFixed(0));\n        return (minutes + ':' + (seconds < 10 ? '0' : '') + seconds);\n    }\n\n    public getKeyValue(keys) {\n        let key = keys.find((k) => {\n            return k.includes('response');\n        })\n        return key;\n    }\n\n    public getMultiselectScore(options, responseDeclaration) {\n        let key: any = this.getKeyValue(Object.keys(responseDeclaration));\n        const selectedOptionValue = options.map(option => option.value);\n        let score = responseDeclaration[key].correctResponse.outcomes.score ? responseDeclaration[key].correctResponse.outcomes.score : responseDeclaration.maxScore;\n        let correctValues = responseDeclaration[key].correctResponse.value;\n        let mapping = responseDeclaration[key]['mapping'];\n        if (_.isEqual(correctValues, selectedOptionValue)) {\n            return score;\n        } else if (!_.isEqual(correctValues, selectedOptionValue)) {\n            return selectedOptionValue.reduce((sum, index) => { sum += (mapping[index] ? mapping[index].outcomes.score : 0); return sum; }, 0);\n        }\n    }\n\n    hasDuplicates(selectedOptions, option) {\n        let duplicate = selectedOptions.find((o) => { return o.value === option.value });\n        return duplicate;\n    }\n\n    getQuestionType(questions, currentIndex) {\n            let index = currentIndex - 1 === -1 ? 0 : currentIndex-1;\n            return questions[index]['qType'];\n        \n    }\n\n    canGo(progressBarClass){\n    let attemptedParams = ['correct', 'wrong', 'attempted'];\n     return attemptedParams.includes(progressBarClass);\n    }\n\n    sumObjectsByKey(...objects) {\n        return objects.reduce((accumulator, currentValue) => {\n            for (const key in currentValue) {\n                if (currentValue.hasOwnProperty(key)) {\n                    accumulator[key] = (accumulator[key] || 0) + currentValue[key];\n                }\n            }\n            return accumulator;\n        }, {});\n    }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { CsTelemetryModule } from '@project-sunbird/client-services/telemetry';\nimport { Context, IParentConfig, QumlPlayerConfig } from './quml-library-interface';\nimport { UtilService } from './util-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QumlLibraryService {\n  duration: number;\n  channel: string;\n  config: QumlPlayerConfig;\n  isSectionsAvailable = false;\n  telemetryEvent = new EventEmitter<any>();\n  private context: Context;\n  private telemetryObject: any;\n  private contentSessionId: string;\n  private playSessionId: string;\n  private pdata: any;\n  private sid: string;\n  private uid: string;\n  private rollup: any;\n\n  constructor(public utilService: UtilService) { }\n\n  initializeTelemetry(config: QumlPlayerConfig, parentConfig: IParentConfig) {\n    this.duration = new Date().getTime();\n    this.context = config.context;\n    this.contentSessionId = this.utilService.uniqueId();\n    this.playSessionId = this.utilService.uniqueId();\n    this.channel = this.context.channel || '';\n    this.pdata = this.context.pdata;\n    this.sid = this.context.sid;\n    this.uid = this.context.uid;\n    this.rollup = this.context.contextRollup;\n    this.config = config;\n    this.isSectionsAvailable = parentConfig?.isSectionsAvailable;\n\n    if (!CsTelemetryModule.instance.isInitialised) {\n      const telemetryConfig = {\n        pdata: this.context.pdata,\n        env: 'contentplayer',\n        channel: this.context.channel,\n        did: this.context.did,\n        authtoken: this.context.authToken || '',\n        uid: this.context.uid || '',\n        sid: this.context.sid,\n        batchsize: 20,\n        mode: this.context.mode,\n        host: this.context.host || '',\n        endpoint: this.context.endpoint || '/data/v3/telemetry',\n        tags: this.context.tags,\n        cdata: (this.context.cdata || []).concat([\n          { id: this.contentSessionId, type: 'ContentSession' },\n          { id: this.playSessionId, type: 'PlaySession' },\n          { id: '2.0', type: 'PlayerVersion' }\n        ])\n      };\n      CsTelemetryModule.instance.init({});\n      CsTelemetryModule.instance.telemetryService.initTelemetry(\n        {\n          config: telemetryConfig,\n          userOrgDetails: {}\n        }\n      );\n    }\n\n    this.telemetryObject = {\n      id: parentConfig.identifier,\n      type: 'Content',\n      ver: config.metadata.pkgVersion ? config.metadata.pkgVersion.toString() : '',\n      rollup: this.context.objectRollup || {}\n    };\n  }\n\n  public startAssesEvent(assesEvent) {\n    CsTelemetryModule.instance.telemetryService.raiseAssesTelemetry(\n      assesEvent,\n      this.getEventOptions()\n    );\n  }\n\n  public start(duration) {\n    CsTelemetryModule.instance.telemetryService.raiseStartTelemetry(\n      {\n        options: this.getEventOptions(),\n        edata: { type: 'content', mode: 'play', pageid: '', duration: Number((duration / 1e3).toFixed(2)) }\n      }\n    );\n  }\n\n  public response(identifier, version, type, option) {\n    const responseEvent = {\n      target: {\n        id: identifier,\n        ver: version,\n        type: type\n      },\n      type: 'CHOOSE',\n      values: [{\n        option\n      }]\n    };\n    CsTelemetryModule.instance.telemetryService.raiseResponseTelemetry(\n      responseEvent,\n      this.getEventOptions()\n    );\n  }\n\n  public summary(eData) {\n    CsTelemetryModule.instance.telemetryService.raiseSummaryTelemetry(\n      eData,\n      this.getEventOptions()\n    );\n  }\n\n  public end(duration, currentQuestionIndex, totalNoofQuestions, visitedQuestions, endpageseen, score) {\n    const durationSec = Number((duration / 1e3).toFixed(2));\n    CsTelemetryModule.instance.telemetryService.raiseEndTelemetry({\n      edata: {\n        type: 'content',\n        mode: 'play',\n        pageid: 'sunbird-player-Endpage',\n        summary: [\n          {\n            progress: Number(((currentQuestionIndex / totalNoofQuestions) * 100).toFixed(0))\n          },\n          {\n            totalNoofQuestions: totalNoofQuestions\n          },\n          {\n            visitedQuestions: visitedQuestions,\n          },\n          {\n            endpageseen\n          },\n          {\n            score\n          },\n        ],\n        duration: durationSec\n      },\n      options: this.getEventOptions()\n    });\n  }\n\n  public interact(id, currentPage, currentQuestionDetails?) {\n    CsTelemetryModule.instance.telemetryService.raiseInteractTelemetry({\n      options: this.getEventOptions(),\n      edata: { type: 'TOUCH', subtype: '', id, pageid: currentPage + '' }\n    });\n  }\n\n\n\n  public heartBeat(data) {\n    CsTelemetryModule.instance.playerTelemetryService.onHeartBeatEvent(data, {});\n  }\n\n  public impression(currentPage) {\n    CsTelemetryModule.instance.telemetryService.raiseImpressionTelemetry({\n      options: this.getEventOptions(),\n      edata: { type: 'workflow', subtype: '', pageid: currentPage + '', uri: '' }\n    });\n  }\n\n  public error(error: Error, edata?: { err: string, errtype: string }) {\n    CsTelemetryModule.instance.telemetryService.raiseErrorTelemetry({\n      options: this.getEventOptions(),\n      edata: {\n        err: 'LOAD',\n        errtype: 'content',\n        stacktrace: (error && error.toString()) || ''\n      }\n    });\n  }\n\n  public getEventOptions() {\n    const options = {\n      object: this.telemetryObject,\n      context: {\n        channel: this.channel || '',\n        pdata: this.pdata,\n        env: 'contentplayer',\n        sid: this.sid,\n        uid: this.uid,\n        cdata: (this.context.cdata || []).concat([{ id: this.contentSessionId, type: 'ContentSession' },\n        { id: this.playSessionId, type: 'PlaySession' },\n        { id: '2.0', type: 'PlayerVersion' }]),\n        rollup: this.rollup || {}\n      }\n    };\n    if (this.isSectionsAvailable) {\n      options.context.cdata.push({ id: this.config.metadata.identifier, type: 'SectionId' });\n    }\n\n    return options;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-quml-library',\n  template: `\n    <p>\n      quml-library works!\n    </p>\n  `,\n  styles: []\n})\nexport class QumlLibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, SecurityContext, Output, EventEmitter, AfterViewInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { katex } from 'katex';\nimport { UtilService } from '../util-service';\n\ndeclare var katex: any;\n\n@Component({\n  selector: 'quml-mcq',\n  templateUrl: './mcq.component.html',\n  styleUrls: ['./mcq.component.scss', '../quml-library.component.scss'],\n\n})\nexport class McqComponent implements OnInit, AfterViewInit {\n  @Input() public question?: any;\n  @Input() identifier: any;\n  @Input() public layout?: string;\n  @Input() replayed : boolean;\n  @Input() tryAgain?: boolean;\n  @Output() componentLoaded = new EventEmitter<any>();\n  @Output() answerChanged = new EventEmitter<any>();\n  @Output() optionSelected = new EventEmitter<number>();\n\n  mcqQuestion: any;\n  options: any;\n  mcqOptions: any[] = [];\n  selectedOptionTarget: any;\n  showQumlPopup = false;\n  solutions: Array<[]>;\n  cardinality: string;\n\n\n\n  constructor(\n    public domSanitizer: DomSanitizer , \n    public utilService: UtilService) {\n  }\n\n  async ngOnInit() {\n\n    if (this.question.solutions) {\n      this.solutions = this.question.solutions;\n    }\n    let  key:any = this.utilService.getKeyValue(Object.keys(this.question.responseDeclaration));\n    this.cardinality = this.question.responseDeclaration[key]['cardinality'];\n    if (this.question.templateId === \"mcq-vertical\") {\n      this.layout = 'DEFAULT';\n    } else if (this.question.templateId === \"mcq-horizontal\") {\n      this.layout = 'IMAGEGRID';\n    } else if (this.question.templateId === \"mcq-vertical-split\") {\n      this.layout = 'IMAGEQAGRID';\n    } else if (this.question.templateId === \"mcq-grid-split\") {\n      this.layout = 'MULTIIMAGEGRID';\n    }\n    this.renderLatex();\n    this.mcqQuestion = this.domSanitizer.sanitize(SecurityContext.HTML,\n      this.domSanitizer.bypassSecurityTrustHtml(this.question.body));\n    this.options = this.question.interactions[key].options;\n    this.initOptions();\n  }\n\n  ngAfterViewInit() {\n    const el = document.getElementsByClassName('mcq-options');\n    if (el != null && el.length > 0) {\n      el[0].remove();\n    }\n  }\n\n  initOptions() {\n    for (let j = 0; j < this.options.length; j++) {\n      let imageUrl;\n      if (this.options[j].url) {\n        imageUrl = this.options[j].url;\n      }\n      const option = this.options[j];\n      const optionValue = option.value.body;\n      const optionHtml = this.domSanitizer.sanitize(SecurityContext.HTML, this.domSanitizer.bypassSecurityTrustHtml(optionValue));\n      const selected = false;\n      const optionToBePushed: any = {};\n      optionToBePushed.index = j;\n      optionToBePushed.optionHtml = optionHtml;\n      optionToBePushed.selected = selected;\n      optionToBePushed.url = imageUrl;\n      this.mcqOptions.push(optionToBePushed);\n    }\n  }\n\n\n\n  renderLatex() {\n    const _instance = this;\n    setTimeout(function () {\n      _instance.replaceLatexText();\n      const images = document.getElementsByTagName('img');\n      if (images != null && images.length > 0) {\n      }\n    }, 100);\n  }\n\n  replaceLatexText() {\n    const questionElement = document.getElementById(this.identifier);\n    if (questionElement != null) {\n      const mathTextDivs = questionElement.getElementsByClassName('mathText');\n      for (let i = 0; i < mathTextDivs.length; i++) {\n        const mathExp = mathTextDivs[i];\n        const textToRender = mathExp.innerHTML;\n        katex.render(textToRender, mathExp, { displayMode: false, output: 'html', throwOnError: true });\n      }\n    }\n  }\n\n  onOptionSelect(event) {\n    const mcqOption = event.option;\n    const solutions = event.solutions;\n    this.mcqOptions.forEach(mcqOptionElement => {\n      if (mcqOptionElement.index === event.option.index) {\n        mcqOptionElement.selected = true;\n      } else {\n        mcqOptionElement.selected = false;\n      }\n    });\n    mcqOption.solutions = solutions;\n    this.getSelectedOptionAndResult(mcqOption);\n\n  }\n  optionSelectedInImage(event) {\n    this.onOptionSelect(event);\n  }\n\n  getSelectedOptionAndResult(optionObj) {\n    this.optionSelected.emit(optionObj);\n  }\n\n  showPopup() {\n    this.showQumlPopup = true;\n  }\n\n  closePopUp() {\n    this.showQumlPopup = false;\n  }\n\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'quml-sa',\n  templateUrl: './sa.component.html',\n  styleUrls: ['./sa.component.scss', '../quml-library.component.scss']\n})\nexport class SaComponent implements OnInit, OnChanges, AfterViewInit {\n\n  @Input() questions?: any;\n  @Input() replayed?: boolean;\n  @Input() baseUrl: string;\n  @Output() componentLoaded = new EventEmitter<any>();\n  @Output() showAnswerClicked = new EventEmitter<any>();\n\n  showAnswer = false;\n  solutions: any;\n  question: any;\n  answer: any;\n  constructor( public domSanitizer: DomSanitizer ) { }\n\n  ngOnChanges() {\n    if (this.replayed) {\n      this.showAnswer = false;\n    } else if (this.questions?.isAnswerShown) {\n      this.showAnswer = true;\n    }\n  }\n\n  showAnswerToUser() {\n    this.showAnswer = true;\n    this.showAnswerClicked.emit({\n      showAnswer: this.showAnswer\n    });\n  }\n\n  onEnter(event) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      this.showAnswerToUser();\n    }\n  }\n\n  handleKeyboardAccessibility() {\n    const elements = Array.from(document.getElementsByClassName('option-body') as HTMLCollectionOf<Element>);\n    elements.forEach((element: HTMLElement) => {\n      if (element.offsetHeight) {\n        const children = Array.from(element.querySelectorAll(\"a\"));\n        children.forEach((child: HTMLElement) => {\n            child.setAttribute('tabindex', '-1');\n        });\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.question = this.questions.body;\n    this.answer = this.questions.answer;\n    this.solutions = this.questions.solutions;\n    this.questions.solutions.forEach(ele => {\n      if (ele.type === 'video' || ele.type === 'image') {\n        this.questions.media.forEach(e => {\n          if (ele.value === e.id) {\n            if (this.baseUrl) {\n              ele.src = `${this.baseUrl}/${this.questions.identifier}/${e.src}`;\n            } else {\n              ele.src = e.baseUrl ? e.baseUrl + e.src : e.src;\n            }\n\n            if (e.thumbnail) {\n              ele.thumbnail = e.thumbnail;\n            }\n          }\n        });\n      } \n    });\n  }\n\n  ngAfterViewInit() {\n    this.handleKeyboardAccessibility()\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input, OnChanges, OnDestroy, AfterViewInit } from '@angular/core';\n\n\n@Component({\n  selector: 'quml-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() questions?: any;\n  @Input() duration?: any;\n  @Input() warningTime?: string;\n  @Input() disablePreviousNavigation: boolean;\n  @Input() showTimer: boolean;\n  @Input() totalNoOfQuestions: any;\n  @Input() currentSlideIndex: any;\n  @Input() active: boolean;\n  @Input() initializeTimer: boolean;\n  @Input() endPageReached: boolean;\n  @Input() loadScoreBoard: boolean;\n  @Input() replayed: boolean;\n  @Input() currentSolutions: any;\n  @Input() showFeedBack: boolean;\n  @Output() nextSlideClicked = new EventEmitter<any>();\n  @Output() prevSlideClicked = new EventEmitter<any>();\n  @Output() durationEnds = new EventEmitter<any>();\n  @Output() showSolution = new EventEmitter<any>();\n  @Input() disableNext?: boolean;\n  @Input() startPageInstruction?: string;\n  @Input() showStartPage?: boolean;\n  @Input() attempts?: { max: number, current: number };\n  minutes: number;\n  seconds: string | number;\n  private intervalRef?;\n  showWarning = false;\n  isMobilePortrait = false;\n\n  time: any;\n  constructor() {\n  }\n\n\n  ngOnInit() {\n    if (this.duration && this.showTimer) {\n      this.minutes = Math.floor(this.duration / 60);\n      this.seconds = this.duration - this.minutes * 60 <  10 ? `0${this.duration - this.minutes * 60}`  :  this.duration - this.minutes * 60;\n    }\n  }\n\n  ngOnChanges() {\n    if (this.duration && this.showTimer && this.initializeTimer && !this.intervalRef) {\n      this.timer();\n    } else if (this.duration === 0 && this.showTimer && this.initializeTimer && !this.intervalRef) {\n      this.showCountUp();\n    }\n    if (this.replayed && this.duration && this.showTimer) {\n      this.showWarning = false;\n      clearInterval(this.intervalRef)\n      this.timer();\n    } else if (this.replayed && this.duration === 0 && this.showTimer) {\n      clearInterval(this.intervalRef)\n      this.showCountUp();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.isMobilePortrait = window.matchMedia(\"(max-width: 480px)\").matches;;\n  }\n\n  ngOnDestroy() {\n    if (this.intervalRef) {\n      clearInterval(this.intervalRef);\n    }\n  }\n\n  nextSlide() {\n    if (!this.disableNext) {\n      this.nextSlideClicked.emit({ type: 'next' });\n    }\n  }\n\n  prevSlide() {\n    if(!this.showStartPage && this.currentSlideIndex === 1) {\n      return\n    }\n    if (!this.disablePreviousNavigation) {\n      this.prevSlideClicked.emit({ event: 'previous clicked' });\n    }\n  }\n\n  openNav() {\n    document.getElementById('mySidenav').style.width = '100%';\n    document.body.style.backgroundColor = 'rgba(0,0,0,0.4)';\n  }\n\n  closeNav() {\n    document.getElementById('mySidenav').style.width = '0';\n    document.body.style.backgroundColor = 'white';\n  }\n\n  timer() {\n    if (this.duration > 0) {\n      let durationInSec = this.duration;\n      this.intervalRef = setInterval(() => {\n        let min = ~~(durationInSec / 60);\n        let sec = (durationInSec % 60);\n        if (sec < 10) {\n          this.time = min + ':' + '0' + sec;\n        } else {\n          this.time = min + ':' + sec;\n        }\n        if (durationInSec === 0) {\n          clearInterval(this.intervalRef);\n          this.durationEnds.emit(true);\n          return false;\n        }\n        if (parseInt(durationInSec) <= parseInt(this.warningTime)) {\n          this.showWarning = true;\n        }\n        durationInSec--;\n      }, 1000);\n    }\n  }\n\n  showCountUp() {\n    let min = 0;\n    let sec = 0;\n    this.intervalRef = setInterval(() => {\n      if (sec === 59) {\n        sec = 0;\n        min = min + 1;\n      }\n      if (sec < 10) {\n        this.time = min + ':' + '0' + sec++;\n      } else {\n        this.time = min + ':' + sec++;\n      }\n    }, 1000);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'quml-mcq-question',\n  templateUrl: './mcq-question.component.html',\n  styleUrls: ['./mcq-question.component.scss']\n})\nexport class McqQuestionComponent implements OnInit {\n\n  @Input() mcqQuestion: any;\n  @Output() showPopup = new EventEmitter();\n  @Input() layout: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  showQumlPopup() {\n    this.showPopup.emit();\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { UtilService } from '../util-service';\n\n@Component({\n  selector: 'quml-mcq-option',\n  templateUrl: './mcq-option.component.html',\n  styleUrls: ['./mcq-option.component.scss']\n})\nexport class McqOptionComponent implements OnChanges {\n\n  @Input() mcqOptions: any;\n  @Input() solutions: any;\n  @Input() layout: any;\n  @Input() cardinality: string;\n  @Output() showPopup = new EventEmitter();\n  @Output() optionSelected = new EventEmitter<any>();\n  selectedOption = []; \n  @Input() replayed : boolean;\n  @Input() tryAgain? : boolean;\n\n  constructor(\n    public utilService : UtilService\n  ) { }\n\n  ngOnChanges() {\n    if(this.replayed) {\n      this.mcqOptions.forEach((ele) => {\n         ele.selected = false;\n      })\n    }\n    if (this.tryAgain) {\n      this.unselectOption();\n    }\n  }\n\n  unselectOption(){\n    this.mcqOptions.forEach((ele) => {\n      ele.selected = false;\n    });\n    this.selectedOption = [];\n    this.optionSelected.emit(\n      {\n        name: 'optionSelect',\n        option: this.selectedOption,\n        cardinality: this.cardinality,\n        solutions: this.solutions\n      }\n    );\n  }\n\n  onOptionSelect(event, mcqOption) {\n    this.mcqOptions.forEach((ele) => {\n      if (this.cardinality === 'single') {\n        if (ele.label === mcqOption.label) {\n          ele.selected = true;\n        } else {\n          ele.selected = false;\n        }\n      } else if(this.cardinality === 'multiple') {\n        if (ele.label === mcqOption.label && !this.utilService.hasDuplicates(this.selectedOption , mcqOption)) {\n          ele.selected = true;\n          this.selectedOption.push(mcqOption)\n        }\n      }\n    });\n    this.optionSelected.emit(\n      {\n        name: 'optionSelect',\n        option: this.cardinality === 'single' ? mcqOption : this.selectedOption,\n        cardinality: this.cardinality,\n        solutions: this.solutions\n      }\n    );\n  }\n\n  onImageOptionSelected(event) {\n    this.onOptionSelect(event, event.option);\n  }\n\n  showQumlPopup() {\n    this.showPopup.emit();\n  }\n\n  onEnter(event: KeyboardEvent, mcqOption) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      this.onOptionSelect(event, mcqOption);\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-quml-popup',\n  templateUrl: './quml-popup.component.html',\n  styleUrls: ['./quml-popup.component.scss']\n})\nexport class QumlPopupComponent implements OnInit, AfterViewInit {\n  @Input() image = 'https://via.placeholder.com/65';\n  @Input() htmlTag: any;\n  @Output() popUpClose = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    document.getElementById('htmlTag').getElementsByTagName('img')[0].style.width = '70%';\n  }\n\n  closePopup() {\n    this.popUpClose.emit();\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-mcq-image-option',\n  templateUrl: './mcq-image-option.component.html',\n  styleUrls: ['./mcq-image-option.component.scss']\n})\nexport class McqImageOptionComponent implements OnInit {\n  showQumlPopup = false;\n  qumlPopupImage: any;\n  @Input() mcqQuestion: any;\n  @Input() solutions: any;\n  @Input() mcqOption: any;\n  @Output() imgOptionSelected = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n  showPopup(image) {\n    this.showQumlPopup = true;\n    this.qumlPopupImage = image;\n\n  }\n\n  optionClicked(mcqOption) {\n    this.imgOptionSelected.emit(\n      {\n        name: 'optionSelect',\n        option: mcqOption,\n        solutions: this.solutions\n      }\n    );\n  }\n\n  onEnter(event: KeyboardEvent, mcqOption) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      this.optionClicked(mcqOption);\n    }\n  }\n\n  openPopup(optionHtml) {\n    this.showQumlPopup = true;\n    this.qumlPopupImage = optionHtml;\n  }\n\n  closePopUp() {\n    this.showQumlPopup = false;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-zoom-in',\n  templateUrl: './zoom-in.component.html',\n  styleUrls: ['./zoom-in.component.css']\n})\nexport class ZoomInComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css']\n})\nexport class StarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-previous',\n  templateUrl: './previous.component.html',\n  styleUrls: ['./previous.component.css']\n})\nexport class PreviousComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-next',\n  templateUrl: './next.component.html',\n  styleUrls: ['./next.component.css']\n})\nexport class NextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-bookmark',\n  templateUrl: './bookmark.component.html',\n  styleUrls: ['./bookmark.component.css']\n})\nexport class BookmarkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-hint',\n  templateUrl: './hint.component.html',\n  styleUrls: ['./hint.component.css']\n})\nexport class HintComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-ans',\n  templateUrl: './ans.component.html',\n  styleUrls: ['./ans.component.css']\n})\nexport class AnsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.css']\n})\nexport class ShareComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-correct',\n  templateUrl: './correct.component.html',\n  styleUrls: ['./correct.component.css']\n})\nexport class CorrectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'quml-scoreboard',\n  templateUrl: './scoreboard.component.html',\n  styleUrls: ['./scoreboard.component.scss']\n})\nexport class ScoreboardComponent implements OnInit, OnDestroy {\n  @Input() scores: any;\n  @Input() totalNoOfQuestions: number;\n  @Input() contentName: string;\n  @Input() showFeedBack: boolean;\n  @Input() isSections: boolean;\n  @Input() isDurationExpired: boolean;\n  @Output() submitClicked = new EventEmitter<any>();\n  @Output() emitQuestionNo = new EventEmitter<any>();\n  @Output() scoreBoardLoaded = new EventEmitter<any>();\n\n  subscription: Subscription;\n  constructor() { }\n\n  ngOnInit() {\n    this.scoreBoardLoaded.emit({\n      scoreBoardLoaded: true\n    });\n\n    this.subscription = fromEvent(document, 'keydown').subscribe((e: KeyboardEvent) => {\n      if (e['key'] === 'Enter') {\n        e.stopPropagation();\n        (document.activeElement  as HTMLElement).click();\n      }\n    });\n  }\n\n  goToQuestion(index: number, identifier?: string) {\n    this.emitQuestionNo.emit({ questionNo: index, identifier });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-startpage',\n  templateUrl: './startpage.component.html',\n  styleUrls: ['./startpage.component.scss', './sb-ckeditor-styles.scss']\n})\nexport class StartpageComponent implements OnInit {\n\n  @Input() instructions: any;\n  @Input() totalNoOfQuestions: number;\n  @Input() points: number;\n  @Input() time: number;\n  @Input() contentName: string;\n  @Input() showTimer: boolean;\n  minutes: number;\n  seconds: string | number;\n\n  ngOnInit() {\n    const durationInSec = this.time / 1000;\n    this.minutes = Math.floor(this.time / 60);\n    this.seconds = this.time - this.minutes * 60 <  10 ? `0${this.time - this.minutes * 60}`  :  this.time - this.minutes * 60;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-startpagestaricon',\n  templateUrl: './startpagestaricon.component.html',\n  styleUrls: ['./startpagestaricon.component.css']\n})\nexport class StartpagestariconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-previous-active',\n  templateUrl: './previous-active.component.html',\n  styleUrls: ['./previous-active.component.css']\n})\nexport class PreviousActiveComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-next-active',\n  templateUrl: './next-active.component.html',\n  styleUrls: ['./next-active.component.css']\n})\nexport class NextActiveComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  Component, Output, EventEmitter, Input,\n  AfterViewInit, OnDestroy, OnInit, HostListener\n} from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'quml-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() alertType: any;\n  @Input() isHintAvailable: boolean;\n  @Input() showSolutionButton: boolean;\n  @Output() closeAlert = new EventEmitter();\n  @Output() showSolution = new EventEmitter();\n  @Output() showHint = new EventEmitter();\n\n  subscription: Subscription;\n  isFocusSet = false;\n\n\n  @HostListener('document:keydown.escape', ['$event']) onKeydownHandler(event: KeyboardEvent) {\n    this.close('close');\n  }\n\n\n  previousActiveElement: HTMLElement;\n\n  ngOnInit() {\n    this.isFocusSet = false;\n    this.previousActiveElement = document.activeElement as HTMLElement;\n    this.subscription = fromEvent(document, 'keydown').subscribe((e: KeyboardEvent) => {\n      if (e['key'] === 'Tab') {\n        console.log('Tab pressed');\n        \n        const nextBtn = document.querySelector('.quml-navigation__previous') as HTMLElement;\n        if (nextBtn) {\n          this.close('close');\n          nextBtn.focus();\n          this.isFocusSet = true;\n          e.stopPropagation();\n        }\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    const alertBody = document.querySelector('.quml-alert__body');\n\n    setTimeout(() => {\n      const wrongButton = document.querySelector('#wrongButton') as HTMLElement;\n      const correctButton = document.querySelector('#correctButton') as HTMLElement;\n      const hintButton = document.querySelector('#hintButton') as HTMLElement;\n\n      if (this.alertType === 'wrong') {\n        wrongButton.focus();\n      } else if (this.alertType === 'correct' && this.showSolutionButton) {\n        correctButton.focus();\n      }\n    }, 100);\n  }\n\n  viewHint() {\n    this.showHint.emit({\n      hint: true,\n    });\n  }\n\n  viewSolution() {\n    this.showSolution.emit({\n      solution: true,\n    });\n  }\n\n  close(type) {\n    this.closeAlert.emit({ type });\n  }\n\n  ngOnDestroy() {\n    if (this.previousActiveElement && !this.isFocusSet) {\n      this.previousActiveElement.focus();\n    }\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-close',\n  templateUrl: './close.component.html',\n  styleUrls: ['./close.component.css']\n})\nexport class CloseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'quml-mcq-solutions',\n  templateUrl: './mcq-solutions.component.html',\n  styleUrls: ['./mcq-solutions.component.scss']\n})\nexport class McqSolutionsComponent  {\n  @Input() question: any;\n  @Input() options: any;\n  @Input() solutions: any;\n  @Output() close = new EventEmitter();\n  @ViewChild('solutionVideoPlayer' , {static: true}) solutionVideoPlayer: ElementRef;\n  \n  showVideoSolution: boolean;\n  previousActiveElement: HTMLElement;\n\n\n  closeSolution() {\n    if (this.solutionVideoPlayer) {\n      this.solutionVideoPlayer.nativeElement.pause();\n    }\n    this.close.emit({\n      close: true\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-durationtimer',\n  templateUrl: './durationtimer.component.html',\n  styleUrls: ['./durationtimer.component.css']\n})\nexport class DurationtimerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-audio',\n  templateUrl: './audio.component.html',\n  styleUrls: ['./audio.component.css']\n})\nexport class AudioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-wrong',\n  templateUrl: './wrong.component.html',\n  styleUrls: ['./wrong.component.css']\n})\nexport class WrongComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'quml-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { DomSanitizer } from '@angular/platform-browser'\nimport { PipeTransform, Pipe } from \"@angular/core\";\n\n@Pipe({\n  name: 'safeHtml'\n}) export class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) { }\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}","export enum pageId  {\n        startPage = 'START_PAGE',\n        submitPage = 'SUBMIT_PAGE',\n        endPage = 'END_PAGE',\n        shortAnswer = 'SHORT_ANSWER'\n}\n\n\nexport enum eventName {\n    pageScrolled = 'PAGE_SCROLLED',\n    viewHint = 'VIEW_HINT',\n    showAnswer = 'SHOW_ANSWER_CLICKED',\n    nextClicked = 'NEXT_CLICKED',\n    prevClicked = 'PREV_CLICKED',\n    progressBar = 'PROGRESSBAR_CLICKED',\n    replayClicked = 'REPLAY_CLICKED',\n    startPageLoaded = 'START_PAGE_LOADED',\n    viewSolutionClicked= 'VIEW_SOLUTION_CLICKED',\n    solutionClosed = 'SOLUTION_CLOSED',\n    closedFeedBack = 'CLOSED_FEEDBACK',\n    tryAgain = 'TRY_AGAIN',\n    optionClicked = 'OPTION_CLICKED',\n    scoreBoardSubmitClicked = 'SCORE_BOARD_SUBMIT_CLICKED',\n    endPageExitClicked = 'EXIT',\n    zoomClicked = 'ZOOM_CLICKED',\n    zoomInClicked = 'ZOOM_IN_CLICKED',\n    zoomOutClicked = 'ZOOM_OUT_CLICKED',\n    zoomCloseClicked = 'ZOOM_CLOSE_CLICKED',\n    goToQuestion = 'GO_TO_QUESTION'\n}\n\nexport enum TelemetryType {\n    interact = 'interact',\n    impression = 'impression',\n}\n","import { Observable } from 'rxjs';\nimport { Question } from './quml-library-interface';\n\n\nexport abstract class QuestionCursor {\n\n  abstract getQuestions(identifiers: string[], parentId?: string): Observable<Question>;\n  abstract getQuestion(identifier: string): Observable<Question>;\n  abstract getQuestionSet(identifier: string): Observable<any>;\n  abstract getAllQuestionSet(identifiers: string[]): Observable<any>;\n\n}","import { EventEmitter, Injectable } from '@angular/core';\nimport { IParentConfig, QumlPlayerConfig } from '../../quml-library-interface';\nimport { QumlLibraryService } from '../../quml-library.service';\nimport { UtilService } from '../../util-service';\nimport { eventName, TelemetryType } from '../../telemetry-constants';\nimport { QuestionCursor } from '../../quml-question-cursor.service';\nimport * as _ from 'lodash-es';\nimport { forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewerService {\n  public qumlPlayerEvent = new EventEmitter<any>();\n  public qumlQuestionEvent = new EventEmitter<any>();\n  zoom: string;\n  rotation: number;\n  qumlPlayerStartTime: number;\n  qumlPlayerLastPageTime: number;\n  totalNumberOfQuestions: number;\n  currentQuestionIndex: number;\n  contentName: string;\n  src: string;\n  userName: string;\n  version = '1.0';\n  timeSpent = '0:0';\n  metaData: any;\n  loadingProgress: number;\n  endPageSeen: boolean;\n  identifiers: any;\n  threshold: number;\n  isAvailableLocally = false;\n  isSectionsAvailable = false;\n  questionSetId: string;\n  parentIdentifier: string;\n  sectionQuestions = [];\n\n  constructor(\n    public qumlLibraryService: QumlLibraryService,\n    public utilService: UtilService,\n    public questionCursor: QuestionCursor\n  ) { }\n\n  initialize(config: QumlPlayerConfig , threshold: number, questionIds: string[], parentConfig: IParentConfig) {\n    this.qumlLibraryService.initializeTelemetry(config, parentConfig);\n    this.identifiers = _.cloneDeep(questionIds);\n    this.parentIdentifier = config.metadata.identifier;\n    this.threshold = threshold;\n    this.rotation = 0;\n    this.totalNumberOfQuestions = config.metadata.childNodes.length || 0;\n    this.qumlPlayerStartTime = this.qumlPlayerLastPageTime = new Date().getTime();\n    this.currentQuestionIndex = 1;\n    this.contentName = config.metadata.name;\n    this.isAvailableLocally = config.metadata.isAvailableLocally;\n    this.isSectionsAvailable = parentConfig?.isSectionsAvailable;\n    this.src = config.metadata.artifactUrl || '';\n    this.questionSetId = config.metadata.identifier;\n\n    if (config.context.userData) {\n      this.userName = config.context.userData.firstName + ' ' + config.context.userData.lastName;\n    }\n    this.metaData = {\n      pagesHistory: [],\n      totalPages: 0,\n      duration: 0,\n      rotation: [],\n      progressBar: [],\n      questions: [],\n      questionIds: [],\n      lastQuestionId: '',\n    };\n    this.loadingProgress = 0;\n    this.endPageSeen = false;\n  }\n\n  raiseStartEvent(currentQuestionIndex) {\n    this.currentQuestionIndex = currentQuestionIndex;\n    const duration = new Date().getTime() - this.qumlPlayerStartTime;\n    const startEvent: any = {\n      eid: 'START',\n      ver: this.version,\n      edata: {\n        type: 'START',\n        currentIndex: this.currentQuestionIndex,\n        duration\n      },\n      metaData: this.metaData\n    };\n\n    this.qumlPlayerEvent.emit(startEvent);\n    this.qumlPlayerLastPageTime = this.qumlPlayerStartTime = new Date().getTime();\n    this.qumlLibraryService.start(duration);\n  }\n\n  raiseEndEvent(currentQuestionIndex,  endPageSeen , score) {\n    this.metaData.questions = this.sectionQuestions;\n    const duration = new Date().getTime() - this.qumlPlayerStartTime;\n    const endEvent: any = {\n      eid: 'END',\n      ver: this.version,\n      edata: {\n        type: 'END',\n        currentPage: currentQuestionIndex,\n        totalPages: this.totalNumberOfQuestions,\n        duration\n      },\n      metaData: this.metaData\n    };\n\n    this.qumlPlayerEvent.emit(endEvent);\n    const visitedlength = (this.metaData.pagesHistory.filter((v, i, a) => a.indexOf(v) === i)).length;\n    this.timeSpent = this.utilService.getTimeSpentText(this.qumlPlayerStartTime);\n    this.qumlLibraryService.end(duration, currentQuestionIndex, this.totalNumberOfQuestions, this.totalNumberOfQuestions, endPageSeen , score);\n  }\n\n  raiseHeartBeatEvent(type: string, telemetryType: string, pageId: any) {\n    const hearBeatEvent: any = {\n      eid: 'HEARTBEAT',\n      ver: this.version,\n      edata: {\n        type,\n        questionIndex: this.currentQuestionIndex,\n      },\n      metaData: this.metaData\n    };\n\n    if (this.isSectionsAvailable) {\n      hearBeatEvent.edata.sectionId = this.questionSetId;\n    }\n\n    this.qumlPlayerEvent.emit(hearBeatEvent);\n    if (TelemetryType.interact === telemetryType) {\n      this.qumlLibraryService.interact(type.toLowerCase(), pageId);\n    } else if (TelemetryType.impression === telemetryType) {\n      this.qumlLibraryService.impression(pageId);\n    }\n\n  }\n\n  raiseAssesEvent(questionData , index , pass , score , resValues , duration){\n    const assessEvent = {\n          item: questionData,\n          index: index,\n          pass: pass, \n          score: score, \n          resvalues: resValues, \n          duration: duration \n    }\n    this.qumlPlayerEvent.emit(assessEvent);\n    this.qumlLibraryService.startAssesEvent(assessEvent);\n  }\n\n  raiseResponseEvent(identifier , qType , optionSelected){\n    const responseEvent = {\n        target: {\n          id: identifier,\n          ver: this.version,\n          type: qType\n        },\n        values: [{\n          optionSelected\n        }]\n    }\n    this.qumlPlayerEvent.emit(responseEvent);\n    this.qumlLibraryService.response(identifier, this.version , qType , optionSelected);\n  }\n\n  raiseSummaryEvent(currentQuestionIndex, endpageseen, score, summaryObj) {\n    let timespent = new Date().getTime() - this.qumlPlayerStartTime;\n    timespent = Number(((timespent % 60000) / 1000).toFixed(2))\n    const eData = {\n      type: \"content\",\n      mode: \"play\",\n      starttime: this.qumlPlayerStartTime,\n      endtime: new Date().getTime(),\n      timespent,\n      pageviews: this.totalNumberOfQuestions,\n      interactions: summaryObj.correct + summaryObj.wrong + summaryObj.partial,\n      extra: [{\n        id: \"progress\",\n        value: ((currentQuestionIndex / this.totalNumberOfQuestions) * 100).toFixed(0).toString()\n      }, {\n        id: \"endpageseen\",\n        value: endpageseen.toString()\n      }, {\n        id: \"score\",\n        value: score.toString()\n      }, {\n        id: \"correct\",\n        value: summaryObj.correct.toString()\n      }, {\n        id: \"incorrect\",\n        value: summaryObj.wrong.toString()\n      }, {\n        id: \"partial\",\n        value: summaryObj.partial.toString()\n      }, {\n        id: \"skipped\",\n        value: summaryObj.skipped.toString()\n      }]\n    };\n    const summaryEvent = {\n      eid: 'QUML_SUMMARY',\n      ver: this.version,\n      edata: eData,\n      metaData: this.metaData\n    };\n    this.qumlPlayerEvent.emit(summaryEvent);\n    this.qumlLibraryService.summary(eData);\n  }\n\n  raiseExceptionLog(errorCode: string , errorType: string , stacktrace , traceId ) {\n    const exceptionLogEvent = {\n      eid: \"ERROR\",\n      edata: {\n          err: errorCode,\n          errtype: errorType,\n          requestid: traceId || '',\n          stacktrace: stacktrace || '',\n      }\n    }\n    this.qumlPlayerEvent.emit(exceptionLogEvent)\n    this.qumlLibraryService.error(stacktrace, { err: errorCode, errtype: errorType });\n  }\n\n\n  getQuestions(currentIndex?: number  , index?: number) {\n    let indentifersForQuestions;\n    if(currentIndex !== undefined && index) {\n      indentifersForQuestions = this.identifiers.splice(currentIndex, index);\n    }else if(!currentIndex && !index){\n      indentifersForQuestions = this.identifiers.splice(0, this.threshold);\n    }\n    if(!_.isEmpty(indentifersForQuestions)) {\n      const requests = [];\n      const chunkArray = _.chunk(indentifersForQuestions, 10);\n      _.forEach(chunkArray, (value) => {\n        requests.push(this.questionCursor.getQuestions(value, this.parentIdentifier));\n      });\n      forkJoin(requests).subscribe(questions => {\n        _.forEach(questions, (value) => {\n          this.qumlQuestionEvent.emit(value);\n        });\n      },(error)=>{\n          this.qumlQuestionEvent.emit({\n            error: error\n          })\n      });\n    }\n  }\n\n  getQuestion() {\n    let indentiferForQuestion = this.identifiers.splice(0, this.threshold);\n      this.questionCursor.getQuestion(indentiferForQuestion).subscribe((question) => {\n        this.qumlQuestionEvent.emit(question);\n      },(error)=>{\n        this.qumlQuestionEvent.emit({\n          error: error\n        })\n    })\n  }\n\n  generateMaxAttemptEvents(currentattempt: number, maxLimitExceeded: boolean, isLastAttempt: boolean) {\n    return {\n      eid: 'exdata',\n      ver: this.version,\n      edata: {\n        type: 'exdata',\n        currentattempt,\n        maxLimitExceeded,\n        isLastAttempt\n      },\n      metaData: this.metaData\n    };\n  }\n\n  updateSectionQuestions(id: string, questions) {\n    const index = this.sectionQuestions.findIndex(section => section.id === id);\n    if (index > -1) {\n      this.sectionQuestions[index].questions = questions;\n    } else {\n      this.sectionQuestions.push({ id, questions });\n    }\n  }\n\n  getSectionQuestions(id: string) {\n    return this.sectionQuestions.find(section => section.id === id)?.questions || [];\n  }\n}\n","import {Component, EventEmitter, HostListener, Input, OnInit, Output} from '@angular/core';\nimport {contentErrorMessage} from '@project-sunbird/sunbird-player-sdk-v9/lib/player-utils/interfaces/errorMessage';\nimport * as _ from 'lodash-es';\nimport {IParentConfig, QumlPlayerConfig} from '../quml-library-interface';\nimport {ViewerService} from '../services/viewer-service/viewer-service';\nimport {eventName, pageId, TelemetryType} from '../telemetry-constants';\nimport {UtilService} from '../util-service';\nimport {QuestionCursor} from '../quml-question-cursor.service';\n\n@Component({\n    selector: 'quml-main-player',\n    templateUrl: './main-player.component.html',\n    styleUrls: ['./main-player.component.scss']\n})\nexport class MainPlayerComponent implements OnInit {\n    @Input() contentId: string;\n    @Input() playerConfig: QumlPlayerConfig;\n    @Output() playerEvent = new EventEmitter<any>();\n    @Output() submitEvent = new EventEmitter<any>();\n    @Output() telemetryEvent = new EventEmitter<any>();\n\n    isLoading = false;\n    isSectionsAvailable = false;\n    isMultiLevelSection = false;\n    sections: any[] = [];\n    isFirstSection = false;\n    sectionIndex = 0;\n    activeSection: any;\n    contentError: contentErrorMessage;\n    parentConfig: IParentConfig = {\n        loadScoreBoard: false,\n        requiresSubmit: false,\n        isFirstSection: false,\n        isSectionsAvailable: false,\n        isReplayed: false,\n        identifier: '',\n        contentName: '',\n        baseUrl: '',\n        instructions: {},\n        questionCount: 0,\n    };\n\n    showEndPage = true;\n    showFeedBack: boolean;\n    endPageReached = false;\n    isEndEventRaised = false;\n    isSummaryEventRaised = false;\n    showReplay = true;\n\n    attempts: { max: number, current: number };\n    mainProgressBar = [];\n    loadScoreBoard = false;\n    summary: {\n        correct: 0,\n        partial: 0,\n        skipped: 0,\n        wrong: 0\n    };\n    isDurationExpired = false;\n    finalScore = 0;\n    totalNoOfQuestions = 0;\n    durationSpent: string;\n    outcomeLabel: string;\n    totalScore: number;\n    initialTime: number;\n    sideMenuConfig = {\n        enable: true,\n        showShare: true,\n        showDownload: true,\n        showReplay: false,\n        showExit: true,\n    };\n    userName: string;\n    jumpToQuestion: any;\n    totalVisitedQuestion = 0;\n    showInstructions = 'No';\n\n    constructor(\n        public viewerService: ViewerService,\n        private utilService: UtilService,\n        public questionCursor: QuestionCursor\n    ) {\n    }\n\n    @HostListener('document:TelemetryEvent', ['$event'])\n    onTelemetryEvent(event) {\n        this.telemetryEvent.emit(event.detail);\n    }\n\n    ngOnInit(): void {\n        if (typeof this.playerConfig === 'string') {\n            try {\n                this.playerConfig = JSON.parse(this.playerConfig);\n            } catch (error) {\n                console.error('Invalid playerConfig: ', error);\n            }\n        }\n        this.isLoading = true;\n        this.setConfig();\n        this.initializeSections();\n        /*this.questionCursor.getQuestionSet(this.contentId).subscribe((data) => {\n            this.playerConfig['metadata'] = _.get(data, 'result.questionSet');\n            this.playerConfig['metadata'].requiresSubmit = 'Yes';\n\n            this.setConfig();\n            this.initializeSections();\n        }, (error) => {\n            console.log(error);\n        });*/\n    }\n\n\n    initializeSections() {\n        const childMimeType = _.map(this.playerConfig.metadata.children, 'mimeType');\n        this.parentConfig.isSectionsAvailable = this.isSectionsAvailable = childMimeType[0] === 'application/vnd.sunbird.questionset';\n        this.viewerService.sectionQuestions = [];\n        if (this.isSectionsAvailable) {\n            this.isMultiLevelSection = this.getMultilevelSection(this.playerConfig.metadata);\n\n            if (this.isMultiLevelSection) {\n                this.contentError = {\n                    messageHeader: 'Unable to load content',\n                    messageTitle: 'Multi level sections are not supported as of now'\n                };\n            } else {\n                let children = this.playerConfig.metadata.children;\n                this.sections = _.map(children, (child) => {\n                    let childNodes = child?.children?.map(item => item.identifier) || [];\n                    const maxQuestions = child?.maxQuestions;\n                    if (child?.shuffle && !this.playerConfig.config?.progressBar?.length) {\n                        childNodes = _.shuffle(childNodes);\n                    }\n\n                    if (maxQuestions) {\n                        childNodes = childNodes.slice(0, maxQuestions);\n                    }\n\n                    if (this.playerConfig.metadata.timeLimits) {\n                        child = {\n                            ...child,\n                            timeLimits: this.playerConfig.metadata.timeLimits,\n                            showTimer: this.playerConfig.metadata.showTimer\n                        };\n                    }\n                    return {\n                        ...this.playerConfig, metadata: {...child, childNodes, showStartPage: this.showInstructions},\n                    };\n                });\n\n                this.setInitialScores();\n                this.activeSection = _.cloneDeep(this.sections[0]);\n                this.isFirstSection = true;\n                this.isLoading = false;\n            }\n        } else {\n            let childNodes = [];\n            if (this.playerConfig.metadata?.children?.length) {\n                childNodes = this.playerConfig.metadata.children.map(item => item.identifier);\n            } else {\n                childNodes = this.playerConfig.metadata.childNodes;\n            }\n\n            const maxQuestions = this.playerConfig.metadata.maxQuestions;\n            if (maxQuestions) {\n                childNodes = childNodes.slice(0, maxQuestions);\n            }\n            if (this.playerConfig.metadata?.shuffle && !this.playerConfig.config?.progressBar?.length) {\n                childNodes = _.shuffle(childNodes);\n            }\n            childNodes.forEach((element, index) => {\n                this.totalNoOfQuestions++;\n                this.mainProgressBar.push({\n                    index: (index + 1), class: 'unattempted', value: undefined,\n                    score: 0,\n                });\n            });\n            this.playerConfig.metadata.childNodes = childNodes;\n            if (this.playerConfig.config?.progressBar?.length) {\n                this.mainProgressBar = _.cloneDeep(this.playerConfig.config.progressBar);\n            }\n            if (this.playerConfig.config?.questions?.length) {\n                const questionsObj = this.playerConfig.config.questions.find(item => item.id === this.playerConfig.metadata.identifier);\n                if (questionsObj?.questions) {\n                    this.viewerService.updateSectionQuestions(this.playerConfig.metadata.identifier, questionsObj.questions);\n                }\n            }\n            this.activeSection = _.cloneDeep(this.playerConfig);\n            this.isLoading = false;\n            this.isFirstSection = true;\n            this.parentConfig.questionCount = this.totalNoOfQuestions;\n        }\n    }\n\n    setConfig() {\n        this.parentConfig.contentName = this.playerConfig.metadata?.name;\n        this.parentConfig.identifier = this.playerConfig.metadata?.identifier;\n        this.parentConfig.requiresSubmit = this.playerConfig.metadata?.requiresSubmit?.toLowerCase() !== 'no';\n        this.parentConfig.instructions = this.playerConfig.metadata?.instructions?.default;\n        this.showEndPage = this.playerConfig.metadata?.showEndPage?.toLowerCase() !== 'no';\n        this.showFeedBack = this.playerConfig.metadata?.showFeedback?.toLowerCase() !== 'no';\n        this.sideMenuConfig = {...this.sideMenuConfig, ...this.playerConfig.config.sideMenu};\n        this.userName = this.playerConfig.context.userData.firstName + ' ' + this.playerConfig.context.userData.lastName;\n\n        if (this.playerConfig.metadata.isAvailableLocally && this.playerConfig.metadata.basePath) {\n            this.parentConfig.baseUrl = this.playerConfig.metadata.basePath;\n        }\n\n        this.attempts = {\n            max: this.playerConfig.metadata?.maxAttempt,\n            current: this.playerConfig.metadata?.currentAttempt ? this.playerConfig.metadata.currentAttempt + 1 : 1\n        };\n        this.totalScore = this.playerConfig.metadata.maxScore;\n        this.showReplay = this.attempts?.max && this.attempts?.current >= this.attempts.max ? false : true;\n        if (typeof this.playerConfig.metadata?.timeLimits === 'string') {\n            this.playerConfig.metadata.timeLimits = JSON.parse(this.playerConfig.metadata.timeLimits);\n        }\n        this.initialTime = new Date().getTime();\n        this.emitMaxAttemptEvents();\n    }\n\n    private getMultilevelSection(obj) {\n        let isMultiLevel;\n        obj.children.forEach(item => {\n            if (item.children && !isMultiLevel) {\n                isMultiLevel = this.hasChildren(item.children);\n            }\n\n        });\n        return isMultiLevel;\n    }\n\n    private hasChildren(arr) {\n        return arr.some(item => item.children);\n    }\n\n    emitMaxAttemptEvents() {\n        if ((this.playerConfig.metadata?.maxAttempt - 1) === this.playerConfig.metadata?.currentAttempt) {\n            this.playerEvent.emit(this.viewerService.generateMaxAttemptEvents(this.attempts?.current, false, true));\n        } else if (this.playerConfig.metadata?.currentAttempt >= this.playerConfig.metadata?.maxAttempt) {\n            this.playerEvent.emit(this.viewerService.generateMaxAttemptEvents(this.attempts?.current, true, false));\n        }\n    }\n\n    getActiveSectionIndex() {\n        return this.sections.findIndex(sec => sec.metadata?.identifier === this.activeSection.metadata?.identifier);\n    }\n\n    onShowScoreBoard(event) {\n        if (this.parentConfig.isSectionsAvailable) {\n            const activeSectionIndex = this.getActiveSectionIndex();\n            this.updateSectionScore(activeSectionIndex);\n        }\n        this.loadScoreBoard = true;\n    }\n\n    onSectionEnd(event) {\n        if (this.parentConfig.isSectionsAvailable) {\n            this.isFirstSection = false;\n            const activeSectionIndex = this.getActiveSectionIndex();\n            this.updateSectionScore(activeSectionIndex);\n            this.setNextSection(event, activeSectionIndex);\n        } else {\n            this.prepareEnd(event);\n        }\n    }\n\n    onPlayerEvent(event) {\n        this.playerEvent.emit(event);\n    }\n\n    getSummaryObject() {\n        const progressBar = this.isSectionsAvailable ? _.flattenDeep(this.mainProgressBar.map(item => item.children)) : this.mainProgressBar;\n        const classObj = _.groupBy(progressBar, 'class');\n        this.summary = {\n            skipped: _.get(classObj, 'skipped.length') || 0,\n            correct: _.get(classObj, 'correct.length') || 0,\n            wrong: _.get(classObj, 'wrong.length') || 0,\n            partial: _.get(classObj, 'partial.length') || 0\n        };\n        this.totalVisitedQuestion = this.summary.correct + this.summary.wrong + this.summary.partial + this.summary.skipped;\n        this.viewerService.totalNumberOfQuestions = this.totalNoOfQuestions;\n    }\n\n    updateSectionScore(activeSectionIndex: number) {\n        this.mainProgressBar[activeSectionIndex].score = this.mainProgressBar[activeSectionIndex].children\n            .reduce((accumulator, currentValue) => accumulator + currentValue.score, 0);\n    }\n\n    setNextSection(event, activeSectionIndex: number) {\n        this.summary = this.utilService.sumObjectsByKey(this.summary, event.summary);\n        const isSectionFullyAttempted = event.summary.skipped === 0 &&\n            (event.summary?.correct + event.summary?.wrong) === this.mainProgressBar[activeSectionIndex]?.children?.length;\n        const isSectionPartiallyAttempted = event.summary.skipped > 0;\n\n        if (event.isDurationEnded) {\n            this.isDurationExpired = true;\n            this.prepareEnd(event);\n            return;\n        }\n\n        let nextSectionIndex = activeSectionIndex + 1;\n        if (event.jumpToSection) {\n            const sectionIndex = this.sections.findIndex(sec => sec.metadata?.identifier === event.jumpToSection);\n            nextSectionIndex = sectionIndex > -1 ? sectionIndex : nextSectionIndex;\n        }\n\n        this.sectionIndex = _.cloneDeep(nextSectionIndex);\n        this.mainProgressBar.forEach((item, index) => {\n            item.isActive = index === nextSectionIndex;\n\n            if (index === activeSectionIndex) {\n                if (isSectionFullyAttempted) {\n                    item.class = 'attempted';\n                } else if (isSectionPartiallyAttempted) {\n                    item.class = 'partial';\n                }\n            }\n        });\n        if (nextSectionIndex < this.sections.length) {\n            this.activeSection = _.cloneDeep(this.sections[nextSectionIndex]);\n        } else {\n            this.prepareEnd(event);\n        }\n    }\n\n    prepareEnd(event) {\n        this.calculateScore();\n        this.setDurationSpent();\n        if (this.parentConfig.requiresSubmit) {\n            this.loadScoreBoard = true;\n        } else {\n            this.endPageReached = true;\n            this.getSummaryObject();\n            this.viewerService.raiseSummaryEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore, this.summary);\n            this.raiseEndEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore);\n            this.isSummaryEventRaised = true;\n            this.isEndEventRaised = true;\n\n        }\n    }\n\n    replayContent() {\n        this.parentConfig.isReplayed = true;\n        this.loadScoreBoard = false;\n        this.endPageReached = false;\n        this.isDurationExpired = false;\n        this.isEndEventRaised = false;\n        this.attempts.current = this.attempts.current + 1;\n        this.showReplay = this.attempts?.max && this.attempts?.current >= this.attempts.max ? false : true;\n        this.totalNoOfQuestions = 0;\n        this.totalVisitedQuestion = 0;\n        this.mainProgressBar = [];\n        this.jumpToQuestion = undefined;\n        this.summary = {\n            correct: 0,\n            partial: 0,\n            skipped: 0,\n            wrong: 0\n        };\n        this.sections = [];\n        this.initialTime = new Date().getTime();\n        this.initializeSections();\n        this.endPageReached = false;\n        this.loadScoreBoard = false;\n        this.activeSection = this.isSectionsAvailable ? _.cloneDeep(this.sections[0]) : this.playerConfig;\n        if (this.attempts?.max === this.attempts?.current) {\n            this.playerEvent.emit(this.viewerService.generateMaxAttemptEvents(_.get(this.attempts, 'current'), false, true));\n        }\n        this.viewerService.raiseHeartBeatEvent(eventName.replayClicked, TelemetryType.interact, 1);\n\n        setTimeout(() => {\n            this.parentConfig.isReplayed = false;\n        }, 200);\n    }\n\n    setInitialScores(activeSectionIndex = 0) {\n        const alphabets = 'abcdefghijklmnopqrstuvwxyz'.split('');\n        this.sections.forEach((section, i) => {\n            this.mainProgressBar.push({\n                index: alphabets[i].toLocaleUpperCase(), class: 'unattempted', value: undefined,\n                score: 0,\n                isActive: i === activeSectionIndex,\n                identifier: section.metadata?.identifier\n            });\n            const children = [];\n            section.metadata.childNodes.forEach((child, index) => {\n                children.push({\n                    identifier: child,\n                    index: (index + 1), class: 'unattempted', value: undefined,\n                    option: undefined, cardinality: undefined,\n                    score: 0\n                });\n                this.totalNoOfQuestions++;\n            });\n            this.mainProgressBar[this.mainProgressBar.length - 1] = {\n                ..._.last(this.mainProgressBar), children\n            };\n\n            if (this.playerConfig.config?.questions?.length) {\n                const questionsObj = this.playerConfig.config.questions.find(item => item.id === section.metadata?.identifier);\n                if (questionsObj?.questions) {\n                    this.viewerService.updateSectionQuestions(section.metadata.identifier, questionsObj.questions);\n                }\n            }\n        });\n        if (this.playerConfig.config?.progressBar?.length) {\n            this.mainProgressBar = _.cloneDeep(this.playerConfig.config.progressBar);\n            this.mainProgressBar[0].isActive = true;\n        }\n        this.parentConfig.questionCount = this.totalNoOfQuestions;\n    }\n\n    calculateScore() {\n        this.finalScore = this.mainProgressBar.reduce((accumulator, currentValue) => accumulator + currentValue.score, 0);\n        this.generateOutComeLabel();\n        return this.finalScore;\n    }\n\n    exitContent(event) {\n        this.calculateScore();\n        if (event?.type === 'EXIT') {\n            this.viewerService.raiseHeartBeatEvent(eventName.endPageExitClicked, TelemetryType.interact, 'endPage');\n            this.getSummaryObject();\n            this.viewerService.raiseSummaryEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore, this.summary);\n            this.isSummaryEventRaised = true;\n            this.raiseEndEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore);\n        }\n    }\n\n\n    raiseEndEvent(currentQuestionIndex, endPageSeen, score) {\n        if (this.isEndEventRaised) {\n            return;\n        }\n        this.isEndEventRaised = true;\n        this.viewerService.metaData.progressBar = this.mainProgressBar;\n        this.viewerService.raiseEndEvent(currentQuestionIndex, endPageSeen, score);\n\n        if (_.get(this.attempts, 'current') >= _.get(this.attempts, 'max')) {\n            this.playerEvent.emit(this.viewerService.generateMaxAttemptEvents(_.get(this.attempts, 'current'), true, false));\n        }\n    }\n\n    setDurationSpent() {\n        if (this.playerConfig.metadata?.summaryType !== 'Score') {\n            this.viewerService.metaData.duration = new Date().getTime() - this.initialTime;\n            this.durationSpent = this.utilService.getTimeSpentText(this.initialTime);\n        }\n    }\n\n    onScoreBoardLoaded(event) {\n        if (event?.scoreBoardLoaded) {\n            this.calculateScore();\n        }\n    }\n\n    onScoreBoardSubmitted(event) {\n        switch (event.type) {\n            case 'back-clicked':\n                this.loadScoreBoard = false;\n                break;\n            default:\n                this.endPageReached = true;\n                this.getSummaryObject();\n                this.setDurationSpent();\n                this.viewerService.raiseHeartBeatEvent(eventName.scoreBoardSubmitClicked, TelemetryType.interact, pageId.submitPage);\n                this.viewerService.raiseSummaryEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore, this.summary);\n                this.raiseEndEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore);\n                this.loadScoreBoard = false;\n                this.isSummaryEventRaised = true;\n                this.submitEvent.emit({\n                    result: this.mainProgressBar\n                });\n        }\n    }\n\n    generateOutComeLabel() {\n        this.outcomeLabel = this.finalScore.toString();\n        switch (_.get(this.playerConfig, 'metadata.summaryType')) {\n            case 'Complete': {\n                this.outcomeLabel = this.totalScore ? `${this.finalScore} / ${this.totalScore}` : this.outcomeLabel;\n                break;\n            }\n            case 'Duration': {\n                this.outcomeLabel = '';\n                break;\n            }\n        }\n    }\n\n    goToQuestion(event) {\n        if (this.parentConfig.isSectionsAvailable && event.identifier) {\n            const sectionIndex = this.sections.findIndex(sec => sec.metadata?.identifier === event.identifier);\n            this.activeSection = _.cloneDeep(this.sections[sectionIndex]);\n            this.mainProgressBar.forEach((item, index) => {\n                item.isActive = index === sectionIndex;\n            });\n        }\n        this.jumpToQuestion = event;\n        this.loadScoreBoard = false;\n    }\n\n    @HostListener('window:beforeunload')\n    ngOnDestroy() {\n        this.calculateScore();\n        this.getSummaryObject();\n        if (this.isSummaryEventRaised === false) {\n            this.viewerService.raiseSummaryEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore, this.summary);\n        }\n        this.raiseEndEvent(this.totalVisitedQuestion, this.endPageReached, this.finalScore);\n    }\n}\n\n/*\n * Should Take care of the following\n *  - handle end page\n *  - handle scoreboard\n *  - handle max Attempts\n *  - handle telemetry initialization\n *  - handle telemetry events - endpage / scoreboard / maxattempts\n *  - handle Jump to question or section\n *  - handle summary event\n *  - handle next/previous button on start and end of the section\n * -  handle raising all the outputs back to the client\n*/\n","import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, HostListener, Input, OnChanges, Output, ViewChild } from '@angular/core';\nimport { errorCode, errorMessage, ErrorService } from '@project-sunbird/sunbird-player-sdk-v9';\nimport * as _ from 'lodash-es';\nimport { CarouselComponent } from 'ngx-bootstrap/carousel';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { QumlPlayerConfig, IParentConfig } from '../quml-library-interface';\nimport { QuestionCursor } from '../quml-question-cursor.service';\nimport { ViewerService } from '../services/viewer-service/viewer-service';\nimport { eventName, pageId, TelemetryType } from '../telemetry-constants';\nimport { UtilService } from '../util-service';\nimport maintain from 'ally.js/esm/maintain/_maintain';\nimport { ISideBarEvent } from '@project-sunbird/sunbird-player-sdk-v9/sunbird-player-sdk.interface';\n\n@Component({\n  selector: 'quml-section-player',\n  templateUrl: './section-player.component.html',\n  styleUrls: ['./section-player.component.scss', './../startpage/sb-ckeditor-styles.scss']\n})\nexport class SectionPlayerComponent implements OnChanges, AfterViewInit {\n\n  @Input() sectionConfig: QumlPlayerConfig;\n  @Input() attempts: { max: number, current: number };\n  @Input() isFirstSection = false;\n  @Input() jumpToQuestion;\n  @Input() mainProgressBar;\n  @Input() sectionIndex = 0;\n  @Input() parentConfig: IParentConfig;\n  @Output() playerEvent = new EventEmitter<any>();\n  @Output() telemetryEvent = new EventEmitter<any>();\n  @Output() sectionEnd = new EventEmitter<any>();\n  @Output() score = new EventEmitter<any>();\n  @Output() summary = new EventEmitter<any>();\n  @Output() showScoreBoard = new EventEmitter<any>();\n\n  @ViewChild('myCarousel', { static: false }) myCarousel: CarouselComponent;\n  @ViewChild('imageModal', { static: true }) imageModal;\n  @ViewChild('questionSlide', { static: false }) questionSlide;\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n  loadView = false;\n  showContentError = false;\n  noOfTimesApiCalled = 0;\n  currentSlideIndex = 0;\n  showStartPage = true;\n  sideMenuConfig = {\n    enable: true,\n    showShare: true,\n    showDownload: true,\n    showReplay: false,\n    showExit: true,\n  };\n  threshold: number;\n  questions = [];\n  questionIds: string[];\n  questionIdsCopy: string[];\n  noOfQuestions: number;\n  initialTime: number;\n  timeLimit: any;\n  warningTime: number;\n  showTimer: any;\n  showFeedBack: boolean;\n  showUserSolution: boolean;\n  startPageInstruction: string;\n  maxScore: number;\n  points: number;\n  initializeTimer: boolean;\n\n  totalScore: number;\n  linearNavigation: boolean;\n  showHints: any;\n  allowSkip: boolean;\n  progressBarClass = [];\n  currentQuestionsMedia: any;\n  disableNext: boolean;\n  endPageReached: boolean;\n  tryAgainClicked = false;\n  currentOptionSelected: string;\n  carouselConfig = {\n    NEXT: 1,\n    PREV: 2\n  };\n  active = false;\n  showAlert: boolean;\n  currentOptions: any;\n  currentQuestion: any;\n  media: any;\n  currentSolutions: any;\n  showSolution: any;\n  optionSelectedObj: any;\n  intervalRef: any;\n  alertType: string;\n  infoPopup: boolean;\n  outcomeLabel: string;\n  stopAutoNavigation: boolean;\n  jumpSlideIndex: any;\n  showQuestions = false;\n  showZoomModal = false;\n  zoomImgSrc: string;\n  imageZoomCount = 100;\n  replayed = false;\n  sectionId: string;\n  showRootInstruction = true;\n  slideDuration = 0;\n  initialSlideDuration: number;\n  disabledHandle: any;\n  subscription: Subscription;\n  constructor(\n    public viewerService: ViewerService,\n    public utilService: UtilService,\n    public questionCursor: QuestionCursor,\n    private cdRef: ChangeDetectorRef,\n    public errorService: ErrorService\n  ) { }\n\n  ngOnChanges(changes): void {\n    this.subscribeToEvents();\n    this.setConfig();\n  }\n\n  ngAfterViewInit() {\n    this.viewerService.raiseStartEvent(0);\n    this.viewerService.raiseHeartBeatEvent(eventName.startPageLoaded, 'impression', 0);\n  }\n\n  private subscribeToEvents(): void {\n    this.viewerService.qumlPlayerEvent.asObservable()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res) => {\n        this.playerEvent.emit(res);\n      });\n\n    this.viewerService.qumlQuestionEvent\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((res) => {\n\n        if (res?.error) {\n          const { traceId } = this.sectionConfig?.config;\n          if (navigator.onLine && this.viewerService.isAvailableLocally) {\n            this.viewerService.raiseExceptionLog(errorCode.contentLoadFails, errorMessage.contentLoadFails,\n              new Error(errorMessage.contentLoadFails), traceId);\n          } else {\n            this.viewerService.raiseExceptionLog(errorCode.internetConnectivity, errorMessage.internetConnectivity,\n              new Error(errorMessage.internetConnectivity), traceId);\n          }\n          this.showContentError = true;\n          return;\n        }\n\n        if (!res?.questions) {\n          return;\n        }\n        const unCommonQuestions = _.xorBy(this.questions, res.questions, 'identifier');\n        this.questions = _.uniqBy(this.questions.concat(unCommonQuestions), 'identifier');\n        this.sortQuestions();\n        this.viewerService.updateSectionQuestions(this.sectionConfig.metadata.identifier, this.questions);\n        this.cdRef.detectChanges();\n        this.noOfTimesApiCalled++;\n        this.loadView = true;\n        if (this.currentSlideIndex > 0 && this.myCarousel) {\n          this.myCarousel.selectSlide(this.currentSlideIndex);\n          if (this.questions[this.currentSlideIndex - 1]) {\n            this.currentQuestionsMedia = this.questions[this.currentSlideIndex - 1]?.media;\n            this.setImageZoom();\n            this.highlightQuestion();\n          }\n        }\n\n        if (this.currentSlideIndex === 0) {\n          if (this.showStartPage) {\n            this.active = this.sectionIndex === 0;\n          } else {\n            setTimeout(() => { this.nextSlide(); });\n          }\n        }\n        this.removeAttribute();\n      });\n  }\n\n  private setConfig() {\n    this.noOfTimesApiCalled = 0;\n    this.currentSlideIndex = 0;\n    this.active = this.currentSlideIndex === 0 && this.sectionIndex === 0 && this.showStartPage;\n\n    if (this.myCarousel) {\n      this.myCarousel.selectSlide(this.currentSlideIndex);\n    }\n    this.sideMenuConfig = { ...this.sideMenuConfig, ...this.sectionConfig?.config?.sideMenu };\n    this.threshold = this.sectionConfig.context?.threshold || 3;\n    this.questionIds = _.cloneDeep(this.sectionConfig.metadata.childNodes);\n\n    if (this.parentConfig.isReplayed) {\n      this.replayed = true;\n      this.initializeTimer = true;\n      this.viewerService.raiseStartEvent(0);\n      this.viewerService.raiseHeartBeatEvent(eventName.startPageLoaded, 'impression', 0);\n      this.disableNext = false;\n      this.currentSlideIndex = 1;\n      this.myCarousel.selectSlide(1);\n      this.currentQuestionsMedia = _.get(this.questions[0], 'media');\n      this.setImageZoom();\n      this.loadView = true;\n      this.removeAttribute();\n\n      setTimeout(() => {\n        const menuBtn = document.querySelector('#overlay-button') as HTMLElement;\n        if (menuBtn) {\n          menuBtn.focus();\n        }\n      }, 100);\n    }\n\n    this.questionIdsCopy = _.cloneDeep(this.sectionConfig.metadata.childNodes);\n    const maxQuestions = this.sectionConfig.metadata.maxQuestions;\n    if (maxQuestions) {\n      this.questionIds = this.questionIds.slice(0, maxQuestions);\n      this.questionIdsCopy = this.questionIdsCopy.slice(0, maxQuestions);\n    }\n\n    this.noOfQuestions = this.questionIds.length;\n    this.viewerService.initialize(this.sectionConfig, this.threshold, this.questionIds, this.parentConfig);\n    this.checkCompatibilityLevel(this.sectionConfig.metadata.compatibilityLevel);\n    this.initialTime = this.initialSlideDuration = new Date().getTime();\n    this.timeLimit = this.sectionConfig.metadata?.timeLimits?.maxTime || 0;\n    this.warningTime = this.sectionConfig.metadata?.timeLimits?.warningTime || 0;\n    this.showTimer = this.sectionConfig.metadata?.showTimer?.toLowerCase() !== 'no';\n    this.showFeedBack = this.sectionConfig.metadata?.showFeedback?.toLowerCase() !== 'no';\n    this.showUserSolution = this.sectionConfig.metadata?.showSolutions?.toLowerCase() !== 'no';\n    this.startPageInstruction = this.sectionConfig.metadata?.instructions?.default || this.parentConfig.instructions;\n    this.linearNavigation = this.sectionConfig.metadata.navigationMode === 'non-linear' ? false : true;\n    this.showHints = this.sectionConfig.metadata?.showHints?.toLowerCase() !== 'no';\n    this.points = this.sectionConfig.metadata?.points;\n\n    this.allowSkip = this.sectionConfig.metadata?.allowSkip?.toLowerCase() !== 'no';\n    this.showStartPage = this.sectionConfig.metadata?.showStartPage?.toLowerCase() !== 'no';\n    this.totalScore = this.sectionConfig.metadata?.maxScore;\n    this.progressBarClass = this.parentConfig.isSectionsAvailable ? this.mainProgressBar.find(item => item.isActive)?.children :\n      this.mainProgressBar;\n\n    this.questions = this.viewerService.getSectionQuestions(this.sectionConfig.metadata.identifier);\n    this.sortQuestions();\n    this.viewerService.updateSectionQuestions(this.sectionConfig.metadata.identifier, this.questions);\n    this.resetQuestionState();\n    if (this.jumpToQuestion) {\n      this.goToQuestion(this.jumpToQuestion);\n    } else if (this.threshold === 1) {\n      this.viewerService.getQuestion();\n    } else if (this.threshold > 1) {\n      this.viewerService.getQuestions();\n    }\n\n    if (!this.sectionConfig.metadata?.children?.length) {\n      this.loadView = true;\n      this.disableNext = true;\n    }\n  }\n\n  removeAttribute() {\n    setTimeout(() => {\n      const firstSlide = document.querySelector('.carousel.slide') as HTMLElement;\n      if (firstSlide) {\n        firstSlide.removeAttribute(\"tabindex\");\n      }\n    }, 100);\n  }\n\n  sortQuestions() {\n    if (this.questions.length && this.questionIds.length) {\n      const ques = [];\n      this.questionIds.forEach((questionId) => {\n        const que = this.questions.find(question => question.identifier === questionId);\n        if (que) {\n          ques.push(que);\n        }\n      });\n      this.questions = ques;\n    }\n  }\n\n  createSummaryObj() {\n    const classObj = _.groupBy(this.progressBarClass, 'class');\n    return {\n      skipped: classObj?.skipped?.length || 0,\n      correct: classObj?.correct?.length || 0,\n      wrong: classObj?.wrong?.length || 0,\n      partial: classObj?.partial?.length || 0\n    };\n  }\n\n  nextSlide() {\n    this.currentQuestionsMedia = _.get(this.questions[this.currentSlideIndex], 'media');\n\n    this.getQuestion();\n    this.viewerService.raiseHeartBeatEvent(eventName.nextClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex() + 1);\n    this.viewerService.raiseHeartBeatEvent(eventName.nextClicked, TelemetryType.impression, this.myCarousel.getCurrentSlideIndex() + 1);\n\n    if (this.currentSlideIndex !== this.questions.length) {\n      this.currentSlideIndex = this.currentSlideIndex + 1;\n    }\n\n    if (!this.initializeTimer) {\n      this.initializeTimer = true;\n    }\n\n    if (this.myCarousel.getCurrentSlideIndex() === this.noOfQuestions) {\n      this.emitSectionEnd();\n      return;\n    }\n\n    if (this.myCarousel.isLast(this.myCarousel.getCurrentSlideIndex()) || this.noOfQuestions === this.myCarousel.getCurrentSlideIndex()) {\n      this.calculateScore();\n    }\n\n    if (this.myCarousel.getCurrentSlideIndex() > 0 &&\n      this.questions[this.myCarousel.getCurrentSlideIndex() - 1].qType === 'MCQ' && this.currentOptionSelected) {\n      const option = this.currentOptionSelected && this.currentOptionSelected['option'] ? this.currentOptionSelected['option'] : undefined;\n      const identifier = this.questions[this.myCarousel.getCurrentSlideIndex() - 1].identifier;\n      const qType = this.questions[this.myCarousel.getCurrentSlideIndex() - 1].qType;\n      this.viewerService.raiseResponseEvent(identifier, qType, option);\n    }\n\n    if (this.questions[this.myCarousel.getCurrentSlideIndex()]) {\n      this.setSkippedClass(this.myCarousel.getCurrentSlideIndex());\n    }\n    this.myCarousel.move(this.carouselConfig.NEXT);\n    this.setImageZoom();\n    this.resetQuestionState();\n    this.clearTimeInterval();\n  }\n\n  prevSlide() {\n    this.disableNext = false;\n    this.currentSolutions = undefined;\n    this.viewerService.raiseHeartBeatEvent(eventName.prevClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex() - 1);\n    this.showAlert = false;\n\n    if (this.currentSlideIndex !== this.questions.length) {\n      this.currentSlideIndex = this.currentSlideIndex + 1;\n    }\n\n    if (this.myCarousel.getCurrentSlideIndex() + 1 === this.noOfQuestions && this.endPageReached) {\n      this.endPageReached = false;\n    } else {\n      this.myCarousel.move(this.carouselConfig.PREV);\n    }\n    this.currentSlideIndex = this.myCarousel.getCurrentSlideIndex();\n    this.active = this.currentSlideIndex === 0 && this.sectionIndex === 0 && this.showStartPage;\n    this.currentQuestionsMedia = _.get(this.questions[this.myCarousel.getCurrentSlideIndex() - 1], 'media');\n    this.setImageZoom();\n    this.setSkippedClass(this.myCarousel.getCurrentSlideIndex() - 1);\n  }\n\n  getQuestion() {\n    if (this.myCarousel.getCurrentSlideIndex() > 0\n      && ((this.threshold * this.noOfTimesApiCalled) - 1) === this.myCarousel.getCurrentSlideIndex()\n      && this.threshold * this.noOfTimesApiCalled >= this.questions.length && this.threshold > 1) {\n      this.viewerService.getQuestions();\n    }\n\n    if (this.myCarousel.getCurrentSlideIndex() > 0\n      && this.questions[this.myCarousel.getCurrentSlideIndex()] === undefined && this.threshold > 1) {\n      this.viewerService.getQuestions();\n    }\n\n    if (this.threshold === 1 && this.myCarousel.getCurrentSlideIndex() >= 0) {\n      this.viewerService.getQuestion();\n    }\n  }\n\n  resetQuestionState() {\n    this.active = false;\n    this.showAlert = false;\n    this.optionSelectedObj = undefined;\n    this.currentOptionSelected = undefined;\n    this.currentQuestion = undefined;\n    this.currentOptions = undefined;\n    this.currentSolutions = undefined;\n  }\n\n  activeSlideChange(event) {\n      this.initialSlideDuration = new Date().getTime();\n  }\n\n  nextSlideClicked(event) {\n    if (this.showRootInstruction && this.parentConfig.isSectionsAvailable) {\n      this.showRootInstruction = false;\n      return;\n    }\n    if (this.myCarousel.getCurrentSlideIndex() === 0) {\n      return this.nextSlide();\n    }\n    if (event?.type === 'next') {\n      this.validateSelectedOption(this.optionSelectedObj, 'next');\n    }\n  }\n\n  previousSlideClicked(event) {\n    if (event.event === 'previous clicked') {\n      if (this.optionSelectedObj && this.showFeedBack) {\n        this.stopAutoNavigation = false;\n        this.validateSelectedOption(this.optionSelectedObj, 'previous');\n      } else {\n        this.stopAutoNavigation = true;\n        if (this.currentSlideIndex === 0 && this.parentConfig.isSectionsAvailable && this.getCurrentSectionIndex() > 0) {\n          const previousSectionId = this.mainProgressBar[this.getCurrentSectionIndex() - 1].identifier;\n          this.jumpToSection(previousSectionId);\n          return;\n        }\n        this.prevSlide();\n      }\n    }\n  }\n\n  getCurrentSectionIndex(): number {\n    const currentSectionId = this.sectionConfig.metadata.identifier;\n    return this.mainProgressBar.findIndex(section => section.identifier === currentSectionId);\n  }\n\n  goToSlideClicked(event, index) {\n    if (!this.progressBarClass?.length) {\n      if (index === 0) {\n        this.jumpSlideIndex = 0;\n        this.goToSlide(this.jumpSlideIndex);\n      }\n      return;\n    }\n    event.stopPropagation();\n    this.active = false;\n    this.jumpSlideIndex = index;\n    if (this.optionSelectedObj && this.showFeedBack) {\n      this.stopAutoNavigation = false;\n      this.validateSelectedOption(this.optionSelectedObj, 'jump');\n    } else {\n      this.stopAutoNavigation = true;\n      this.goToSlide(this.jumpSlideIndex);\n    }\n  }\n\n  onEnter(event, index) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      this.goToSlideClicked(event, index);\n    }\n  }\n\n  jumpToSection(identifier: string) {\n    this.showRootInstruction = false;\n    this.emitSectionEnd(false, identifier);\n  }\n\n  onSectionEnter(event, identifier: string) {\n    if (event.keyCode === 13) {\n      event.stopPropagation();\n      if (this.optionSelectedObj) {\n        this.validateSelectedOption(this.optionSelectedObj, 'jump');\n      }\n      this.jumpToSection(identifier);\n    }\n  }\n\n  onScoreBoardClicked() {\n    this.viewerService.updateSectionQuestions(this.sectionConfig.metadata.identifier, this.questions);\n    this.showScoreBoard.emit();\n  }\n\n  onScoreBoardEnter(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (event.keyCode === 13) {\n      this.onScoreBoardClicked();\n    }\n  }\n\n  focusOnNextButton() {\n    setTimeout(() => {\n      const nextBtn = document.querySelector('.quml-navigation__next') as HTMLElement;\n      if (nextBtn) {\n        nextBtn.focus();\n      }\n    }, 100);\n  }\n\n  getOptionSelected(optionSelected) {\n    this.focusOnNextButton();\n    this.active = true;\n    this.currentOptionSelected = optionSelected;\n    const currentIndex = this.myCarousel.getCurrentSlideIndex() - 1;\n    this.viewerService.raiseHeartBeatEvent(eventName.optionClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n\n    // This optionSelected comes empty whenever the try again is clicked on feedback popup\n    if (_.isEmpty(optionSelected?.option)) {\n      this.optionSelectedObj = undefined;\n      this.currentSolutions = undefined;\n      this.updateScoreBoard(currentIndex, 'skipped');\n    } else {\n      this.optionSelectedObj = optionSelected;\n      this.currentSolutions = !_.isEmpty(optionSelected.solutions) ? optionSelected.solutions : undefined;\n    }\n    this.media = this.questions[this.myCarousel.getCurrentSlideIndex() - 1].media;\n\n    if (this.currentSolutions) {\n      this.currentSolutions.forEach((ele, index) => {\n        if (ele.type === 'video') {\n          this.media.forEach((e) => {\n            if (e.id === this.currentSolutions[index].value) {\n              this.currentSolutions[index].type = 'video';\n              this.currentSolutions[index].src = e.src;\n              this.currentSolutions[index].thumbnail = e.thumbnail;\n            }\n          });\n        }\n      });\n    }\n    if (!this.showFeedBack) {\n      this.validateSelectedOption(this.optionSelectedObj);\n    }\n  }\n\n  durationEnds() {\n    this.showSolution = false;\n    this.showAlert = false;\n    this.emitSectionEnd(true);\n  }\n\n  private checkCompatibilityLevel(compatibilityLevel) {\n    if (compatibilityLevel) {\n      const checkContentCompatible = this.errorService.checkContentCompatibility(compatibilityLevel);\n\n      if (!checkContentCompatible.isCompitable) {\n        this.viewerService.raiseExceptionLog(errorCode.contentCompatibility, errorMessage.contentCompatibility,\n          checkContentCompatible.error, this.sectionConfig?.config?.traceId);\n      }\n    }\n  }\n\n  emitSectionEnd(isDurationEnded: boolean = false, jumpToSection?: string) {\n    const eventObj: any = {\n      summary: this.createSummaryObj(),\n      score: this.calculateScore(),\n      durationSpent: this.utilService.getTimeSpentText(this.initialTime),\n      slideIndex: this.myCarousel.getCurrentSlideIndex(),\n      isDurationEnded,\n    };\n    if (jumpToSection) {\n      eventObj.jumpToSection = jumpToSection;\n    }\n    this.viewerService.updateSectionQuestions(this.sectionConfig.metadata.identifier, this.questions);\n    this.sectionEnd.emit(eventObj);\n  }\n\n  closeAlertBox(event) {\n    if (event?.type === 'close') {\n      this.viewerService.raiseHeartBeatEvent(eventName.closedFeedBack, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    } else if (event?.type === 'tryAgain') {\n      this.tryAgainClicked = true;\n      setTimeout(() => {\n        this.tryAgainClicked = false;\n      }, 2000);\n      this.viewerService.raiseHeartBeatEvent(eventName.tryAgain, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    }\n    this.showAlert = false;\n  }\n\n  setSkippedClass(index) {\n    if (this.progressBarClass && _.get(this.progressBarClass[index], 'class') === 'unattempted') {\n      this.progressBarClass[index].class = 'skipped';\n    }\n  }\n\n  sideBarEvents(event: ISideBarEvent) {\n    if (event.type === 'OPEN_MENU' || event.type === 'CLOSE_MENU') {\n      this.handleSideBarAccessibility(event);\n    }\n    this.viewerService.raiseHeartBeatEvent(event.type, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex() + 1);\n  }\n\n  handleSideBarAccessibility(event) {\n    const navBlock = document.querySelector('.navBlock') as HTMLInputElement;\n    const overlayInput = document.querySelector('#overlay-input') as HTMLElement;\n    const overlayButton = document.querySelector('#overlay-button') as HTMLElement;\n    const sideBarList = document.querySelector('#sidebar-list') as HTMLElement;\n\n    if (event.type === 'OPEN_MENU') {\n      const isMobile = this.sectionConfig.config?.sideMenu?.showExit;\n      this.disabledHandle = isMobile ? maintain.hidden({ filter: [ sideBarList, overlayButton, overlayInput ] }) : maintain.tabFocus({ context: navBlock });\n      this.subscription = fromEvent(document, 'keydown').subscribe((e: KeyboardEvent) => {\n        if (e['key'] === 'Escape') {\n          const inputChecked = document.getElementById('overlay-input') as HTMLInputElement;\n          inputChecked.checked = false;\n          document.getElementById('playerSideMenu').style.visibility = 'hidden';\n          document.querySelector<HTMLElement>('.navBlock').style.marginLeft = '-100%';\n          this.viewerService.raiseHeartBeatEvent('CLOSE_MENU', TelemetryType.interact, this.myCarousel.getCurrentSlideIndex() + 1);\n          this.disabledHandle.disengage();\n          this.subscription.unsubscribe();\n          this.disabledHandle = null;\n          this.subscription = null;\n        }\n      });\n    } else if (event.type === 'CLOSE_MENU' && this.disabledHandle) {\n      this.disabledHandle.disengage();\n      this.disabledHandle = null;\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n        this.subscription = null;\n      }\n    }\n  }\n\n  validateSelectedOption(option, type?: string) {\n    const selectedOptionValue = option?.option?.value;\n    const currentIndex = this.myCarousel.getCurrentSlideIndex() - 1;\n    const isQuestionSkipAllowed = !this.optionSelectedObj &&\n      this.allowSkip && this.utilService.getQuestionType(this.questions, currentIndex) === 'MCQ';\n    const isSubjectiveQuestion = this.utilService.getQuestionType(this.questions, currentIndex) === 'SA';\n    const onStartPage = this.startPageInstruction && this.myCarousel.getCurrentSlideIndex() === 0;\n    const isActive = !this.optionSelectedObj && this.active;\n    const selectedQuestion = this.questions[currentIndex];\n\n    if (this.optionSelectedObj) {\n      const key = this.utilService.getKeyValue(Object.keys(selectedQuestion.responseDeclaration));\n      this.currentQuestion = selectedQuestion.body;\n      this.currentOptions = selectedQuestion.interactions[key].options;\n\n      const getParams = () => {\n        if (selectedQuestion.qType.toUpperCase() === 'MCQ' && selectedQuestion?.editorState?.options) {\n          return selectedQuestion.editorState.options;\n        } else if (selectedQuestion.qType.toUpperCase() === 'MCQ' && !_.isEmpty(selectedQuestion?.editorState)) {\n          return [selectedQuestion?.editorState];\n        } else {\n          return [];\n        }\n      };\n      if (option.cardinality === 'single') {\n        const correctOptionValue = Number(selectedQuestion.responseDeclaration[key].correctResponse.value);\n        this.slideDuration = Math.round((new Date().getTime() - this.initialSlideDuration) / 1000);\n        const edataItem: any = {\n          'id': selectedQuestion.identifier,\n          'title': selectedQuestion.name,\n          'desc': selectedQuestion.description,\n          'type': selectedQuestion.qType.toLowerCase(),\n          'maxscore': selectedQuestion.responseDeclaration[key].maxScore || 0,\n          'params': getParams()\n        };\n\n        if (edataItem && this.parentConfig.isSectionsAvailable) {\n          edataItem.sectionId = this.sectionConfig.metadata.identifier;\n        }\n\n        this.showAlert = true;\n        if (option.option?.value === correctOptionValue) {\n          const currentScore = this.getScore(currentIndex, key, true);\n          this.viewerService.raiseAssesEvent(edataItem, currentIndex + 1, 'Yes', currentScore, [option.option], this.slideDuration);\n          this.alertType = 'correct';\n          if (this.showFeedBack)\n            this.correctFeedBackTimeOut(type);\n          this.updateScoreBoard(currentIndex, 'correct', undefined, currentScore);\n        } else {\n          const currentScore = this.getScore(currentIndex, key, false, option);\n          this.alertType = 'wrong';\n          const classType = this.progressBarClass[currentIndex].class === 'partial' ? 'partial' : 'wrong';\n          this.updateScoreBoard(currentIndex, classType, selectedOptionValue, currentScore);\n        }\n      }\n      if (option.cardinality === 'multiple') {\n        const responseDeclaration = this.questions[currentIndex].responseDeclaration;\n        const currentScore = this.utilService.getMultiselectScore(option.option, responseDeclaration);\n        this.showAlert = true;\n        if (currentScore === 0) {\n          this.alertType = 'wrong';\n          this.updateScoreBoard((currentIndex + 1), 'wrong');\n        } else {\n          this.updateScoreBoard(((currentIndex + 1)), 'correct', undefined, currentScore);\n          if (this.showFeedBack)\n            this.correctFeedBackTimeOut(type);\n          this.alertType = 'correct';\n        }\n      }\n      this.progressBarClass[currentIndex].cardinality = _.get(this.optionSelectedObj, 'cardinality');\n      this.progressBarClass[currentIndex].option = _.get(this.optionSelectedObj, 'option');\n      this.optionSelectedObj = undefined;\n    } else if ((isQuestionSkipAllowed) || isSubjectiveQuestion || onStartPage || isActive) {\n      this.nextSlide();\n    } else if (this.startPageInstruction && !this.optionSelectedObj && !this.active && !this.allowSkip &&\n      this.myCarousel.getCurrentSlideIndex() > 0 && this.utilService.getQuestionType(this.questions, currentIndex) === 'MCQ'\n      && this.utilService.canGo(this.progressBarClass[this.myCarousel.getCurrentSlideIndex()])) {\n      this.infoPopupTimeOut();\n    } else if (!this.optionSelectedObj && !this.active && !this.allowSkip && this.myCarousel.getCurrentSlideIndex() >= 0\n      && this.utilService.getQuestionType(this.questions, currentIndex) === 'MCQ'\n      && this.utilService.canGo(this.progressBarClass[this.myCarousel.getCurrentSlideIndex()])) {\n      this.infoPopupTimeOut();\n    }\n  }\n\n  infoPopupTimeOut() {\n    this.infoPopup = true;\n    setTimeout(() => {\n      this.infoPopup = false;\n    }, 2000);\n  }\n\n  correctFeedBackTimeOut(type?: string) {\n    this.intervalRef = setTimeout(() => {\n      this.showAlert = false;\n      if (!this.myCarousel.isLast(this.myCarousel.getCurrentSlideIndex()) && type === 'next') {\n        this.nextSlide();\n      } else if (type === 'previous' && !this.stopAutoNavigation) {\n        this.prevSlide();\n      } else if (type === 'jump' && !this.stopAutoNavigation) {\n        this.goToSlide(this.jumpSlideIndex);\n      } else if (this.myCarousel.isLast(this.myCarousel.getCurrentSlideIndex())) {\n        this.endPageReached = true;\n        this.emitSectionEnd();\n      }\n    }, 4000);\n  }\n\n  goToSlide(index) {\n    this.viewerService.raiseHeartBeatEvent(eventName.goToQuestion, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    this.disableNext = false;\n    this.currentSlideIndex = index;\n    this.showRootInstruction = false;\n    if (index === 0) {\n      this.optionSelectedObj = undefined;\n      this.myCarousel.selectSlide(0);\n      this.active = this.currentSlideIndex === 0 && this.sectionIndex === 0 && this.showStartPage;\n      this.showRootInstruction = true;\n      if (!this.sectionConfig.metadata?.children?.length) {\n        this.disableNext = true;\n      }\n      return;\n    }\n    this.currentQuestionsMedia = _.get(this.questions[this.currentSlideIndex - 1], 'media');\n    this.setSkippedClass(this.currentSlideIndex - 1);\n    if (!this.initializeTimer) {\n      this.initializeTimer = true;\n    }\n    if (this.questions[index - 1] === undefined) {\n      this.showQuestions = false;\n      this.viewerService.getQuestions(0, index);\n      this.currentSlideIndex = index;\n    } else if (this.questions[index - 1] !== undefined) {\n      this.myCarousel.selectSlide(index);\n    }\n    this.setImageZoom();\n    this.currentSolutions = undefined;\n    this.highlightQuestion();\n  }\n\n  goToQuestion(event) {\n    this.active = false;\n    this.showRootInstruction = false;\n    this.disableNext = false;\n    this.initializeTimer = true;\n    const index = event.questionNo;\n    this.viewerService.getQuestions(0, index);\n    this.currentSlideIndex = index;\n    this.myCarousel.selectSlide(index);\n    this.highlightQuestion();\n  }\n\n  highlightQuestion() {\n    const currentQuestion = this.questions[this.currentSlideIndex - 1];\n    const questionType = currentQuestion?.qType?.toUpperCase();\n    const element = document.getElementById(currentQuestion?.identifier) as HTMLElement;\n    if (element && questionType) {\n      let questionTitleElement;\n\n      switch (questionType) {\n        case 'MCQ':\n          questionTitleElement = element.querySelector('.mcq-title') as HTMLElement;\n          break;\n        default:\n          questionTitleElement = element.querySelector('.question-container') as HTMLElement;\n      }\n\n      if (questionTitleElement) {\n        setTimeout(() => {\n          questionTitleElement.focus();\n        }, 0);\n      }\n    }\n  }\n\n  getSolutions() {\n    this.showAlert = false;\n    this.viewerService.raiseHeartBeatEvent(eventName.showAnswer, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    this.viewerService.raiseHeartBeatEvent(eventName.showAnswer, TelemetryType.impression, this.myCarousel.getCurrentSlideIndex());\n    const currentIndex = this.myCarousel.getCurrentSlideIndex() - 1;\n    this.currentQuestion = this.questions[currentIndex].body;\n    this.currentOptions = this.questions[currentIndex].interactions.response1.options;\n    this.currentQuestionsMedia = _.get(this.questions[currentIndex], 'media');\n    setTimeout(() => {\n      this.setImageZoom();\n    });\n    setTimeout(() => {\n      this.setImageHeightWidthClass();\n    }, 100);\n    if (this.currentSolutions) {\n      this.showSolution = true;\n    }\n    this.clearTimeInterval();\n  }\n\n  viewSolution() {\n    this.viewerService.raiseHeartBeatEvent(eventName.viewSolutionClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    this.showSolution = true;\n    this.showAlert = false;\n    this.currentQuestionsMedia = _.get(this.questions[this.myCarousel.getCurrentSlideIndex() - 1], 'media');\n    setTimeout(() => {\n      this.setImageZoom();\n      this.setImageHeightWidthClass();\n    });\n    clearTimeout(this.intervalRef);\n  }\n\n  closeSolution() {\n    this.setImageZoom();\n    this.viewerService.raiseHeartBeatEvent(eventName.solutionClosed, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    this.showSolution = false;\n    this.myCarousel.selectSlide(this.currentSlideIndex);\n    this.focusOnNextButton();\n  }\n\n  viewHint() {\n    this.viewerService.raiseHeartBeatEvent(eventName.viewHint, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n  }\n\n  showAnswerClicked(event, question?) {\n    if (event?.showAnswer) {\n      this.focusOnNextButton();\n      this.active = true;\n      this.progressBarClass[this.myCarousel.getCurrentSlideIndex() - 1].class = 'correct';\n      if (question) {\n        const index = this.questions.findIndex(que => que.identifier === question.identifier);\n        if (index > -1) {\n          this.questions[index].isAnswerShown = true;\n          this.viewerService.updateSectionQuestions(this.sectionConfig.metadata.identifier, this.questions);\n        }\n      }\n      this.viewerService.raiseHeartBeatEvent(eventName.showAnswer, TelemetryType.interact, pageId.shortAnswer);\n      this.viewerService.raiseHeartBeatEvent(eventName.pageScrolled, TelemetryType.impression, this.myCarousel.getCurrentSlideIndex() - 1);\n    }\n  }\n\n  getScore(currentIndex, key, isCorrectAnswer, selectedOption?) {\n    if (isCorrectAnswer) {\n      return this.questions[currentIndex].responseDeclaration[key].correctResponse.outcomes.SCORE ?\n        this.questions[currentIndex].responseDeclaration[key].correctResponse.outcomes.SCORE :\n        this.questions[currentIndex].responseDeclaration[key].maxScore || 1;\n    } else {\n      const selectedOptionValue = selectedOption.option.value;\n      const mapping = this.questions[currentIndex].responseDeclaration.mapping;\n      let score = 0;\n\n      if (mapping) {\n        mapping.forEach((val) => {\n          if (selectedOptionValue === val.response) {\n            score = val.outcomes.SCORE || 0;\n            if (val.outcomes.SCORE) {\n              this.progressBarClass[currentIndex].class = 'partial';\n            }\n          }\n        });\n      }\n      return score;\n    }\n  }\n\n  calculateScore() {\n    return this.progressBarClass.reduce((accumulator, element) => accumulator + element.score, 0);\n  }\n\n  updateScoreBoard(index, classToBeUpdated, optionValue?, score?) {\n    this.progressBarClass.forEach((ele) => {\n      if (ele.index - 1 === index) {\n        ele.class = classToBeUpdated;\n        ele.score = score ? score : 0;\n\n        if (!this.showFeedBack) {\n          ele.value = optionValue;\n        }\n      }\n    });\n  }\n\n  /* End of score methods  */\n\n  /* Start of Image zoom related */\n  setImageHeightWidthClass() {\n    document.querySelectorAll('[data-asset-variable]').forEach(image => {\n      image.removeAttribute('class');\n      if (image.clientHeight > image.clientWidth) {\n        image.setAttribute('class', 'portrait');\n      } else if (image.clientHeight < image.clientWidth) {\n        image.setAttribute('class', 'landscape');\n      } else {\n        image.setAttribute('class', 'neutral');\n      }\n    });\n  }\n\n  setImageZoom() {\n    const index = this.myCarousel.getCurrentSlideIndex() - 1;\n    const currentQuestionId = this.questions[index]?.identifier;\n    document.querySelectorAll('[data-asset-variable]').forEach(image => {\n      const imageId = image.getAttribute('data-asset-variable');\n      image.setAttribute('class', 'option-image');\n      image.setAttribute('id', imageId);\n      _.forEach(this.currentQuestionsMedia, (val) => {\n        if (imageId === val.id) {\n          if (this.sectionConfig.metadata.isAvailableLocally && this.parentConfig.baseUrl) {\n            if (currentQuestionId) {\n              image['src'] = `${this.parentConfig.baseUrl}/${currentQuestionId}/${val.src}`;\n            }\n          } else if (val.baseUrl) {\n            image['src'] = val.baseUrl + val.src;\n          }\n        }\n      });\n      const divElement = document.createElement('div');\n      divElement.setAttribute('class', 'magnify-icon');\n      divElement.onclick = (event) => {\n        this.viewerService.raiseHeartBeatEvent(eventName.zoomClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n        this.zoomImgSrc = image['src'];\n        this.showZoomModal = true;\n        const zoomImage = document.getElementById('imageModal');\n        if (zoomImage.clientHeight > image.clientWidth) {\n          zoomImage.setAttribute('class', 'portrait');\n        } else if (image.clientHeight < image.clientWidth) {\n          zoomImage.setAttribute('class', 'landscape');\n        } else {\n          zoomImage.setAttribute('class', 'neutral');\n        }\n        event.stopPropagation();\n      };\n      image.parentNode.insertBefore(divElement, image.nextSibling);\n    });\n  }\n\n  // Method Name changed\n  zoomIn() {\n    this.viewerService.raiseHeartBeatEvent(eventName.zoomInClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    this.imageZoomCount = this.imageZoomCount + 10;\n    this.setImageModalHeightWidth();\n  }\n\n  // Method Name changed\n  zoomOut() {\n    this.viewerService.raiseHeartBeatEvent(eventName.zoomOutClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    if (this.imageZoomCount > 100) {\n      this.imageZoomCount = this.imageZoomCount - 10;\n      this.setImageModalHeightWidth();\n    }\n  }\n\n  setImageModalHeightWidth() {\n    this.imageModal.nativeElement.style.width = `${this.imageZoomCount}%`;\n    this.imageModal.nativeElement.style.height = `${this.imageZoomCount}%`;\n  }\n\n  closeZoom() {\n    this.viewerService.raiseHeartBeatEvent(eventName.zoomCloseClicked, TelemetryType.interact, this.myCarousel.getCurrentSlideIndex());\n    document.getElementById('imageModal').removeAttribute('style');\n    this.showZoomModal = false;\n  }\n  /* End of Image zoom related */\n\n  clearTimeInterval() {\n    if (this.intervalRef) {\n      clearInterval(this.intervalRef);\n    }\n  }\n\n  @HostListener('window:beforeunload')\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n    this.errorService.getInternetConnectivityError.unsubscribe();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {QumlLibraryComponent} from './quml-library.component';\nimport {McqComponent} from './mcq/mcq.component';\nimport {SaComponent} from './sa/sa.component';\nimport {CarouselModule} from 'ngx-bootstrap/carousel';\nimport {HeaderComponent} from './header/header.component';\nimport {McqQuestionComponent} from './mcq-question/mcq-question.component';\nimport {McqOptionComponent} from './mcq-option/mcq-option.component';\nimport {QumlPopupComponent} from './quml-popup/quml-popup.component';\nimport {McqImageOptionComponent} from './mcq-image-option/mcq-image-option.component';\nimport {ZoomInComponent} from './icon/zoom-in/zoom-in.component';\nimport {StarComponent} from './icon/star/star.component';\nimport {PreviousComponent} from './icon/previous/previous.component';\nimport {NextComponent} from './icon/next/next.component';\nimport {BookmarkComponent} from './icon/bookmark/bookmark.component';\nimport {HintComponent} from './icon/hint/hint.component';\nimport {AnsComponent} from './icon/ans/ans.component';\nimport {ShareComponent} from './icon/share/share.component';\nimport {CorrectComponent} from './icon/correct/correct.component';\nimport {ScoreboardComponent} from './scoreboard/scoreboard.component';\nimport {StartpageComponent} from './startpage/startpage.component';\nimport {TimerComponent} from './icon/timer/timer.component';\nimport {ContentComponent} from './icon/content/content.component';\nimport {StartpagestariconComponent} from './icon/startpagestaricon/startpagestaricon.component';\nimport {PreviousActiveComponent} from './icon/previous-active/previous-active.component';\nimport {NextActiveComponent} from './icon/next-active/next-active.component';\nimport {AlertComponent} from './alert/alert.component';\nimport {CloseComponent} from './icon/close/close.component';\nimport {McqSolutionsComponent} from './mcq-solutions/mcq-solutions.component';\nimport {DurationtimerComponent} from './icon/durationtimer/durationtimer.component';\nimport {AudioComponent} from './icon/audio/audio.component';\nimport {WrongComponent} from './icon/wrong/wrong.component';\nimport {MenuComponent} from './icon/menu/menu.component';\nimport {SunbirdPlayerSdkModule} from '@project-sunbird/sunbird-player-sdk-v9';\nimport {QumlLibraryService} from './quml-library.service';\nimport {SafeHtmlPipe} from './pipes/safe-html/safe-html.pipe';\nimport {MainPlayerComponent} from './main-player/main-player.component';\nimport {SectionPlayerComponent} from './section-player/section-player.component';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {HttpClient} from '@angular/common/http';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\n\n\n@NgModule({\n    declarations: [\n        QumlLibraryComponent,\n        McqComponent,\n        HeaderComponent,\n        SaComponent,\n        McqQuestionComponent,\n        McqOptionComponent,\n        QumlPopupComponent,\n        McqImageOptionComponent,\n        ZoomInComponent,\n        StarComponent,\n        PreviousComponent,\n        NextComponent,\n        PreviousActiveComponent,\n        BookmarkComponent,\n        HintComponent,\n        AnsComponent,\n        ShareComponent,\n        CorrectComponent,\n        ScoreboardComponent,\n        StartpageComponent,\n        TimerComponent,\n        ContentComponent,\n        StartpagestariconComponent,\n        NextActiveComponent,\n        AlertComponent,\n        CloseComponent,\n        McqSolutionsComponent,\n        DurationtimerComponent,\n        AudioComponent,\n        WrongComponent,\n        MenuComponent,\n        SafeHtmlPipe,\n        MainPlayerComponent,\n        SectionPlayerComponent,\n    ],\n    imports: [\n        CommonModule,\n        CarouselModule,\n        SunbirdPlayerSdkModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'hi',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    providers: [\n        QumlLibraryService\n    ],\n    exports: [MainPlayerComponent]\n})\nexport class QumlLibraryModule {\n}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n"]}