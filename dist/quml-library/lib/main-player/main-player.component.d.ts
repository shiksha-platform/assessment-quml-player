import { EventEmitter, OnInit } from '@angular/core';
import { contentErrorMessage } from '@project-sunbird/sunbird-player-sdk-v9/lib/player-utils/interfaces/errorMessage';
import { IParentConfig, QumlPlayerConfig } from '../quml-library-interface';
import { ViewerService } from '../services/viewer-service/viewer-service';
import { UtilService } from '../util-service';
import { QuestionCursor } from '../quml-question-cursor.service';
export declare class MainPlayerComponent implements OnInit {
    viewerService: ViewerService;
    private utilService;
    questionCursor: QuestionCursor;
    contentId: string;
    playerConfig: QumlPlayerConfig;
    playerEvent: EventEmitter<any>;
    submitEvent: EventEmitter<any>;
    telemetryEvent: EventEmitter<any>;
    isLoading: boolean;
    isSectionsAvailable: boolean;
    isMultiLevelSection: boolean;
    sections: any[];
    isFirstSection: boolean;
    sectionIndex: number;
    activeSection: any;
    contentError: contentErrorMessage;
    parentConfig: IParentConfig;
    showEndPage: boolean;
    showFeedBack: boolean;
    endPageReached: boolean;
    isEndEventRaised: boolean;
    isSummaryEventRaised: boolean;
    showReplay: boolean;
    attempts: {
        max: number;
        current: number;
    };
    mainProgressBar: any[];
    loadScoreBoard: boolean;
    summary: {
        correct: 0;
        partial: 0;
        skipped: 0;
        wrong: 0;
    };
    isDurationExpired: boolean;
    finalScore: number;
    totalNoOfQuestions: number;
    durationSpent: string;
    outcomeLabel: string;
    totalScore: number;
    initialTime: number;
    sideMenuConfig: {
        enable: boolean;
        showShare: boolean;
        showDownload: boolean;
        showReplay: boolean;
        showExit: boolean;
    };
    userName: string;
    jumpToQuestion: any;
    totalVisitedQuestion: number;
    showInstructions: string;
    constructor(viewerService: ViewerService, utilService: UtilService, questionCursor: QuestionCursor);
    onTelemetryEvent(event: any): void;
    ngOnInit(): void;
    initializeSections(): void;
    setConfig(): void;
    private getMultilevelSection;
    private hasChildren;
    emitMaxAttemptEvents(): void;
    getActiveSectionIndex(): number;
    onShowScoreBoard(event: any): void;
    onSectionEnd(event: any): void;
    onPlayerEvent(event: any): void;
    getSummaryObject(): void;
    updateSectionScore(activeSectionIndex: number): void;
    setNextSection(event: any, activeSectionIndex: number): void;
    prepareEnd(event: any): void;
    replayContent(): void;
    setInitialScores(activeSectionIndex?: number): void;
    calculateScore(): number;
    exitContent(event: any): void;
    raiseEndEvent(currentQuestionIndex: any, endPageSeen: any, score: any): void;
    setDurationSpent(): void;
    onScoreBoardLoaded(event: any): void;
    onScoreBoardSubmitted(event: any): void;
    generateOutComeLabel(): void;
    goToQuestion(event: any): void;
    ngOnDestroy(): void;
}
